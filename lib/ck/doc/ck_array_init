.\"
.\" Copyright 2012-2013 Samy Al Bahra.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"
.Dd October 18, 2013
.Dt CK_ARRAY_INIT 3
.Sh NAME
.Nm ck_array_init
.Nd initialize a pointer array
.Sh LIBRARY
Concurrency Kit (libck, \-lck)
.Sh SYNOPSIS
.In ck_array.h
.Ft bool
.Fn ck_array_init "ck_array_t *array" "unsigned int mode" "struct ck_malloc *allocator" "unsigned int initial_length"
.Sh DESCRIPTION
The
.Fn ck_array_init 3
function initializes the array pointed to by the argument
.Fa array .
The mode value must be
.Dv CK_ARRAY_MODE_SPMC .
The
.Fa allocator
argument must point to a ck_malloc data structure with valid non-NULL function pointers
initialized for malloc, free and realloc. The
.Fa initial_length
specifies the initial length of the array. The value of
.Fa initial_length
must be greater than or equal to 2. An array allows for one concurrent put or remove operations
in the presence of any number of concurrent CK_ARRAY_FOREACH operations.
.Sh RETURN VALUES
This function returns true if the array was successfully created. It returns
false if the creation failed. Failure may occur due to internal memory allocation
failures or invalid arguments.
.Sh SEE ALSO
.Xr ck_array_commit 3 ,
.Xr ck_array_put 3 ,
.Xr ck_array_put_unique 3 ,
.Xr ck_array_remove 3 ,
.Xr ck_array_deinit 3
.Xr ck_array_length 3 ,
.Xr ck_array_buffer 3 ,
.Xr ck_array_initialized 3 ,
.Xr CK_ARRAY_FOREACH 3
.Pp
Additional information available at http://concurrencykit.org/
