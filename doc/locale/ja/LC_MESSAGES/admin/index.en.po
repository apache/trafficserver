# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../admin/index.en.rst:4
msgid "Administrators' Guide"
msgstr ""

#: ../../admin/index.en.rst:24
msgid ""
"Apache Traffic Server™ speeds Internet access, enhances website performance,"
" and delivers unprecedented web hosting capabilities."
msgstr ""

#: ../../admin/index.en.rst:27
msgid "This chapter discusses how:"
msgstr ""

#: ../../admin/index.en.rst:29
msgid "Contents:"
msgstr ""

#: ../../admin/index.en.rst:53
msgid "What Is Apache Traffic Server?"
msgstr ""

#: ../../admin/index.en.rst:55
msgid ""
"Global data networking has become part of everyday life: Internet users "
"request billions of documents and terabytes of data, on a daily basis, to "
"and from all parts of the world. Information is free, abundant, and "
"accessible. Unfortunately, global data networking can also be a nightmare "
"for IT professionals as they struggle with overloaded servers and congested "
"networks. It can be challenging to consistently and reliably accommodate "
"society’s growing data demands."
msgstr ""

#: ../../admin/index.en.rst:63
msgid ""
"Traffic Server is a high-performance web proxy cache that improves network "
"efficiency and performance by caching frequently-accessed information at the"
" edge of the network. This brings content physically closer to end users, "
"while enabling faster delivery and reduced bandwidth use. Traffic Server is "
"designed to improve content delivery for enterprises, Internet service "
"providers (ISPs), backbone providers, and large intranets by maximizing "
"existing and available bandwidth."
msgstr ""

#: ../../admin/index.en.rst:72
msgid "Traffic Server Deployment Options"
msgstr ""

#: ../../admin/index.en.rst:74
msgid ""
"To best suit your needs, Traffic Server can be deployed in several ways:"
msgstr ""

#: ../../admin/index.en.rst:76
msgid "As a web proxy cache"
msgstr ""

#: ../../admin/index.en.rst:77
msgid "As a reverse proxy"
msgstr ""

#: ../../admin/index.en.rst:78
msgid "In a cache hierarchy"
msgstr ""

#: ../../admin/index.en.rst:80
msgid ""
"The following sections provide a summary of these Traffic Server deployment "
"options. Please keep in mind that with every of these options Traffic Server"
" can be run as a *single instance*, or as a *multi-node cluster*."
msgstr ""

#: ../../admin/index.en.rst:86
msgid "Traffic Server as a Web Proxy Cache"
msgstr ""

#: ../../admin/index.en.rst:88
msgid ""
"As a web proxy cache, Traffic Server receives user requests for web content "
"as those requests travel to the destined web server (origin server). If "
"Traffic Server contains the requested content, then it serves the content "
"directly. If the requested content is not available from cache, then Traffic"
" Server acts as a proxy: it obtains the content from the origin server on "
"the user’s behalf and also keeps a copy to satisfy future requests."
msgstr ""

#: ../../admin/index.en.rst:96
msgid ""
"Traffic Server provides explicit proxy caching, in which the user’s client "
"software must be configured to send requests directly to Traffic Server. "
"Explicit proxy caching is described in the :ref:`explicit-proxy-caching` "
"chapter."
msgstr ""

#: ../../admin/index.en.rst:103
msgid "Traffic Server as a Reverse Proxy"
msgstr ""

#: ../../admin/index.en.rst:105
msgid ""
"As a reverse proxy, Traffic Server is configured to be the origin server to "
"which the user is trying to connect (typically, the origin server’s "
"advertised hostname resolves to Traffic Server, which acts as the real "
"origin server). The reverse proxy feature is also called server "
"acceleration. Reverse proxy is described in more detail in :ref:`reverse-"
"proxy-and-http-redirects`."
msgstr ""

#: ../../admin/index.en.rst:112
msgid "Traffic Server in a Cache Hierarchy"
msgstr ""

#: ../../admin/index.en.rst:114
msgid ""
"Traffic Server can participate in flexible cache hierarchies, in which "
"Internet requests not fulfilled from one cache are routed to other regional "
"caches, thereby leveraging the contents and proximity of nearby caches. In a"
" hierarchy of proxy servers, Traffic Server can act either as a parent or a "
"child cache to other Traffic Server systems or to similar caching products."
msgstr ""

#: ../../admin/index.en.rst:121
msgid ""
"Traffic Server supports ICP (Internet Cache Protocol) peering. Hierarchical "
"caching is described in more detail in :ref:`hierarchical-caching`."
msgstr ""

#: ../../admin/index.en.rst:125
msgid "Deployment Limitations"
msgstr ""

#: ../../admin/index.en.rst:127
msgid ""
"There's a number of deployment options that Traffic Server does not support "
"right out of the box. Such funcionality may be implemented in a plugin, but "
"in some cases Traffic Server's internal APIs or architectural restrictions "
"won't make it easy:"
msgstr ""

#: ../../admin/index.en.rst:131
msgid ""
"Load Balancing - note that there is an experimental plugin for this: :ref"
":`balancer-plugin`."
msgstr ""

#: ../../admin/index.en.rst:134
msgid "Traffic Server Components"
msgstr ""

#: ../../admin/index.en.rst:136
msgid ""
"Traffic Server consists of several components that work together to form a "
"web proxy cache you can easily monitor and configure. These main components "
"are described below."
msgstr ""

#: ../../admin/index.en.rst:141
msgid "The Traffic Server Cache"
msgstr ""

#: ../../admin/index.en.rst:143
msgid ""
"The Traffic Server cache consists of a high-speed object database called the"
" object store. The object store indexes objects according to URLs and "
"associated headers. Using sophisticated object management, the object store "
"can cache alternate versions of the same object (perhaps in a different "
"language or encoding type). It can also efficiently store very small and "
"very large objects, thereby minimizing wasted space. When the cache is full,"
" Traffic Server removes stale data to ensure that the most requested objects"
" are readily available and fresh."
msgstr ""

#: ../../admin/index.en.rst:152
msgid ""
"Traffic Server is designed to tolerate total disk failures on any of the "
"cache disks. If the disk fails completely, then Traffic Server marks the "
"entire disk as corrupt and continues to use remaining disks. If all of the "
"cache disks fail, then Traffic Server switches to proxy-only mode. You can "
"partition the cache to reserve a certain amount of disk space for storing "
"data for specific protocols and origin servers. For more information about "
"the cache, see :ref:`configuring-the-cache`."
msgstr ""

#: ../../admin/index.en.rst:161
msgid "The RAM Cache"
msgstr ""

#: ../../admin/index.en.rst:163
msgid ""
"Traffic Server maintains a small RAM cache that contains extremely popular "
"objects. This RAM cache serves the most popular objects as fast as possible "
"and reduces load on disks, especially during temporary traffic peaks. You "
"can configure the RAM cache size to suit your needs; for detailed "
"information, refer to :ref:`changing-the-size-of-the-ram-cache`."
msgstr ""

#: ../../admin/index.en.rst:170
msgid "The Host Database"
msgstr ""

#: ../../admin/index.en.rst:172
msgid ""
"The Traffic Server host database stores the domain name server (DNS) entries"
" of origin servers to which Traffic Server connects to fulfill user "
"requests. This information is used to adapt future protocol interactions and"
" optimize performance. Along with other information, the host database "
"tracks:"
msgstr ""

#: ../../admin/index.en.rst:178
msgid "DNS information (for fast conversion of hostnames to IP addresses)"
msgstr ""

#: ../../admin/index.en.rst:179
msgid ""
"The HTTP version of each host (so advanced protocol features can be used "
"with hosts running modern servers)"
msgstr ""

#: ../../admin/index.en.rst:181
msgid ""
"Host reliability and availability information (so users will not wait for "
"servers that are not running)"
msgstr ""

#: ../../admin/index.en.rst:185
msgid "The DNS Resolver"
msgstr ""

#: ../../admin/index.en.rst:187
msgid ""
"Traffic Server includes a fast, asynchronous DNS resolver to streamline "
"conversion of hostnames to IP addresses. Traffic Server implements the DNS "
"resolver natively by directly issuing DNS command packets rather than "
"relying on slower, conventional resolver libraries. Since many DNS queries "
"can be issued in parallel and a fast DNS cache maintains popular bindings in"
" memory, DNS traffic is reduced."
msgstr ""

#: ../../admin/index.en.rst:195
msgid "Traffic Server Processes"
msgstr ""

#: ../../admin/index.en.rst:197
msgid ""
"Traffic Server contains three processes that work together to serve requests"
" and manage/control/monitor the health of the system. The three processes "
"are described below:"
msgstr ""

#: ../../admin/index.en.rst:201
msgid ""
"The :program:`traffic_server` process is the transaction processing engine "
"of Traffic Server. It is responsible for accepting connections, processing "
"protocol requests, and serving documents from the cache or origin server."
msgstr ""

#: ../../admin/index.en.rst:206
msgid ""
"The :program:`traffic_manager` process is the command and control facility "
"of the Traffic Server, responsible for launching, monitoring, and "
"reconfiguring the :program:`traffic_server` process. The "
":program:`traffic_manager` process is also responsible for the proxy "
"autoconfiguration port, the statistics interface, cluster administration, "
"and virtual IP failover."
msgstr ""

#: ../../admin/index.en.rst:213
msgid ""
"If the :program:`traffic_manager` process detects a "
":program:`traffic_server` process failure, it instantly restarts the process"
" but also maintains a connection queue of all incoming requests. All "
"incoming connections that arrive in the several seconds before full server "
"restart are saved in the connection queue and processed in first-come, "
"first-served order. This connection queueing shields users from any server "
"restart downtime."
msgstr ""

#: ../../admin/index.en.rst:221
msgid ""
"The :program:`traffic_cop` process monitors the health of both the "
":program:`traffic_server` and :program:`traffic_manager` processes. The "
":program:`traffic_cop` process periodically (several times each minute) "
"queries the :program:`traffic_server` and :program:`traffic_manager` process"
" by issuing heartbeat requests to fetch synthetic web pages. In the event of"
" failure (if no response is received within a timeout interval or if an "
"incorrect response is received), :program:`traffic_cop` restarts the "
":program:`traffic_manager` and :program:`traffic_server` processes."
msgstr ""

#: ../../admin/index.en.rst:230
msgid "The figure below illustrates the three Traffic Server processes."
msgstr ""

#: ../../admin/index.en.rst:236
msgid "Illustration of the three Traffic Server Processes"
msgstr ""

#: ../../admin/index.en.rst:239
msgid "Administration Tools"
msgstr ""

#: ../../admin/index.en.rst:241
msgid "Traffic Server offers the following administration options:"
msgstr ""

#: ../../admin/index.en.rst:243
msgid ""
"The Traffic Line command-line interface is a text-based interface from which"
" you can monitor Traffic Server performance and network traffic, as well as "
"configure the Traffic Server system. From Traffic Line, you can execute "
"individual commands or script a series of commands in a shell."
msgstr ""

#: ../../admin/index.en.rst:248
msgid ""
"The Traffic Shell command-line interface is an additional command-line tool "
"that enables you to execute individual commands that monitor and configure "
"the Traffic Server system."
msgstr ""

#: ../../admin/index.en.rst:251
msgid ""
"Various configuration files enable you to configure Traffic Server through a"
" simple file-editing and signal-handling interface. Any changes you make "
"through Traffic Line or Traffic Shell are automatically made to the "
"configuration files as well."
msgstr ""

#: ../../admin/index.en.rst:255
msgid ""
"Finally there is a clean C API which can be put to good use from a multitude"
" of languages. The Traffic Server Admin Client demonstrates this for Perl."
msgstr ""

#: ../../admin/index.en.rst:260
msgid "Traffic Analysis Options"
msgstr ""

#: ../../admin/index.en.rst:262
msgid ""
"Traffic Server provides several options for network traffic analysis and "
"monitoring:"
msgstr ""

#: ../../admin/index.en.rst:265
msgid ""
"Traffic Line and Traffic Shell enable you to collect and process statistics "
"obtained from network traffic information."
msgstr ""

#: ../../admin/index.en.rst:268
msgid ""
"Transaction logging enables you to record information (in a log file) about "
"every request Traffic Server receives and every error it detects. By "
"analyzing the log files, you can determine how many clients used the Traffic"
" Server cache, how much information each of them requested, and what pages "
"were most popular. You can also see why a particular transaction was in "
"error and what state the Traffic Server was in at a particular time; for "
"example, you can see that Traffic Server was restarted or that cluster "
"communication timed out."
msgstr ""

#: ../../admin/index.en.rst:277
msgid ""
"Traffic Server supports several standard log file formats, such as Squid and"
" Netscape, and its own custom format. You can analyze the standard format "
"log files with off-the-shelf analysis packages. To help with log file "
"analysis, you can separate log files so that they contain information "
"specific to protocol or hosts."
msgstr ""

#: ../../admin/index.en.rst:283
msgid ""
"Traffic analysis options are described in more detail in :ref:`monitoring-"
"traffic`."
msgstr ""

#: ../../admin/index.en.rst:285
msgid ""
"Traffic Server logging options are described in :ref:`working-with-log-"
"files`."
msgstr ""

#: ../../admin/index.en.rst:288
msgid "Traffic Server Security Options"
msgstr ""

#: ../../admin/index.en.rst:290
msgid ""
"Traffic Server provides numerous options that enable you to establish secure"
" communication between the Traffic Server system and other computers on the "
"network. Using the security options, you can do the following:"
msgstr ""

#: ../../admin/index.en.rst:295
msgid "Control client access to the Traffic Server proxy cache."
msgstr ""

#: ../../admin/index.en.rst:296
msgid ""
"Configure Traffic Server to use multiple DNS servers to match your site's "
"security configuration. For example, Traffic Server can use different DNS "
"servers, depending on whether it needs to resolve hostnames located inside "
"or outside a firewall. This enables you to keep your internal network "
"configuration secure while continuing to provide transparent access to "
"external sites on the Internet."
msgstr ""

#: ../../admin/index.en.rst:302
msgid ""
"Configure Traffic Server to verify that clients are authenticated before "
"they can access content from the Traffic Server cache."
msgstr ""

#: ../../admin/index.en.rst:304
msgid ""
"Secure connections in reverse proxy mode between a client and Traffic "
"Server, and Traffic Server and the origin server, using the SSL termination "
"option."
msgstr ""

#: ../../admin/index.en.rst:307
msgid "Control access via SSL (Secure Sockets Layer)."
msgstr ""

#: ../../admin/index.en.rst:309
msgid ""
"Traffic Server security options are described in more detail in :ref"
":`security-options`."
msgstr ""
