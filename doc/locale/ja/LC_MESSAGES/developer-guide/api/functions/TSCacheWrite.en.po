# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 6.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-02 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.1.1\n"

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:32
msgid "Description"
msgstr "解説"

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:25
msgid "Synopsis"
msgstr "概要"

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:22
msgid "TSCacheWrite"
msgstr ""

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:27
msgid "`#include <ts/ts.h>`"
msgstr "`#include <ts/ts.h>`"

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:34
msgid ""
"Asks the Traffic Server cache if :arg:`contp` can start writing the object "
"corresponding to :arg:`key` to the cache."
msgstr ""

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:37
msgid ""
"If the object can be written, the cache calls :arg:`contp` back with the "
"event :data:`TS_EVENT_CACHE_OPEN_WRITE`.  In this case, the cache also "
"passes :arg:`contp` a cache vconnection and :arg:`contp` can then initiate "
"a write operation on that vconnection using :type:`TSVConnWrite`.  The "
"object is not committed to the cache until the vconnection is closed. When "
"all data has been transferred, the user (:arg:`contp`) must do an :type:"
"`TSVConnClose`.  In case of any errors, the user must do an "
"``TSVConnAbort(contp, 0)``."
msgstr ""

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:46
msgid ""
"If the object cannot be written, the cache calls :arg:`contp` back with the "
"event :data:`TS_EVENT_CACHE_OPEN_WRITE_FAILED`.  This can happen, for "
"example, if there is another object with the same :arg:`key` being written "
"to the cache.  The user (:arg:`contp`) has the option to cancel the action "
"returned by :type:`TSCacheWrite`."
msgstr ""

#: ../../developer-guide/api/functions/TSCacheWrite.en.rst:52
msgid ""
"Note that reentrant calls are possible, i.e. the cache can call back the "
"user (:arg:`contp`) in the same call."
msgstr ""
