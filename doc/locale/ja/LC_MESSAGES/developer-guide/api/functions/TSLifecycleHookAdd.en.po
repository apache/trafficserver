# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 6.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-30 14:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:25
msgid "TSLifecycleHookAdd"
msgstr "TSLifecycleHookAdd"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:28
msgid "Synopsis"
msgstr "概要"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:30
msgid "`#include <ts/ts.h>`"
msgstr "`#include <ts/ts.h>`"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:35
msgid "Description"
msgstr "解説"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:37
msgid ""
":func:`TSLifecycleHookAdd` adds :arg:`contp` to the list of lifecycle hooks "
"specified by :arg:`id`. Lifecycle hooks are based on the Traffic Server "
"process, not on any specific transaction or session. These will typically "
"be called only once during the execution of the Traffic Server process and "
"therefore should be added in :func:`TSPluginInit` (which could itself be "
"considered a lifecyle hook). Unlike other hooks, lifecycle hooks may not "
"have a well defined ordering and use of them should not assume that one of "
"the hooks is always called before another unless specifically mentioned."
msgstr ""
":func:`TSLifecycleHookAdd` は :arg:`contp` を :arg:`id` で指定されるライフサ"
"イクルフックのリストに追加します。ライフサイクルフックは特定のトランザクショ"
"ンやセッションではなく Traffic Server プロセスのもとに成り立ちます。これらは"
"一般的に Traffic Server プロセスの実行中に一度だけ呼び出されるので、( それ自"
"体もライフサイクルフックとみなされる ) :func:`TSPluginInit` の中で追加される"
"べきです。他のフックと違い、ライフサイクルフックは明確な順序を持たず、使用に"
"あたっては特に言及されていない限りフックのうちの一つが常に他のどれかより前に"
"呼び出されると仮定すべきではありません。"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:48
msgid ""
"Called after the :ts:cv:`proxy server port <proxy.config.http."
"server_ports>` data structures have been initialized but before connections "
"are accepted on those ports. The sockets corresponding to the ports may or "
"may not be open depending on how the :program:`traffic_server` process was "
"invoked. Other API functions that depend on server ports should be called "
"from this hook and not :func:`TSPluginInit`."
msgstr ""
":ts:cv:`プロキシーサーバーポート <proxy.config.http.server_ports>` データ構"
"造が初期化された後、接続がそれらのポート上で accept される前に呼ばれます。"
"ポートに対応するソケットは :program:`traffic_server` プロセスがどのように起"
"動されたかによって open されることもされないこともあります。サーバーポートに"
"依存するその他の API 関数は :func:`TSPluginInit` ではなくこのフックから呼ば"
"れるべきです。"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:55
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_PORTS_INITIALIZED` and "
"``NULL`` data."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:60
msgid ""
"Called after enabling connections on the proxy server ports. Because |TS| "
"is threaded this may or may not be called before any connections are "
"accepted. The hook code may assume that any connection to |TS| started "
"after this hook is called will be accepted by |TS|, making this a "
"convenient place to signal external processes of that."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:66
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_PORTS_READY` and "
"``NULL`` data."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:71
#, fuzzy
msgid "Called after |TS| cache initialization has finished."
msgstr "Traffic Server のキャッシュの初期化が完了した後に呼ばれます。"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:73
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_CACHE_READY` and "
"``NULL`` data."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:78
msgid ""
"Called when triggered by an external process, such as :program:"
"`traffic_ctl`."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:80
msgid ""
"Invoked with the event :c:data:`TS_EVENT_LIFECYCLE_MSG`. The data is an "
"instance of the :c:type:`TSPluginMsg`. This contains a *tag* which is a "
"null terminated string and a data payload. The payload cannot be assumed to "
"be null terminated and is created by the external agent."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:86
msgid "Ordering"
msgstr "順番"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:88
msgid ""
":c:data:`TS_LIFECYCLE_PORTS_INITIALIZED_HOOK` will always be called before :"
"c:data:`TS_LIFECYCLE_PORTS_READY_HOOK`."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:92
msgid "Examples"
msgstr "例"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:94
#, fuzzy
msgid ""
"The following example demonstrates how to correctly use :func:"
"`TSNetAcceptNamedProtocol`, which requires the proxy ports to be "
"initialized and therefore does not work if called from :func:`TSPluginInit` "
"directly."
msgstr ""
"次の例は :func:`TSNetAcceptNamedProtocol` を正しく使用する方法、つまりプロキ"
"シーポートが初期化され :func:`TSPluginInit` から直接呼び出された場合に動作し"
"ないようにする方法を説明しています。"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:130
msgid "History"
msgstr "歴史"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:132
msgid ""
"Lifecycle hooks were introduced to solve process initialization ordering "
"issues (TS-1487). Different API calls required different modules of |TS| to "
"be initialized for the call to work, but others did not work that late in "
"initialization, which was problematic because all of them could effectively "
"only be called from :func:`TSPluginInit` . The solution was to move :func:"
"`TSPluginInit` as early as possible in the process initialization and "
"provide hooks for API calls that needed to be invoked later which served "
"essentially as additional pluging initialization points."
msgstr ""

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:142
#, fuzzy
msgid "See Also"
msgstr "参考"

#: ../../../developer-guide/api/functions/TSLifecycleHookAdd.en.rst:144
msgid ":manpage:`TSAPI(3ts)`, :manpage:`TSContCreate(3ts)`"
msgstr ":manpage:`TSAPI(3ts)` 、\\ :manpage:`TSContCreate(3ts)`"

#~ msgid ""
#~ "Called after enabling connections on the proxy server ports. Because "
#~ "Traffic Server is threaded this may or may not be called before any "
#~ "connections are accepted. The hook code may assume that any connection "
#~ "to Traffic Server started after this hook is called will be accepted by "
#~ "Traffic Server, making this a convenient place to signal external "
#~ "processes of that."
#~ msgstr ""
#~ "プロキシーサーバーポート上での接続の有効化の後に呼ばれます。Traffic "
#~ "Server はスレッドで動作するので、接続を受け付ける前に呼ばれることも、そう"
#~ "でないこともあります。フックコードはこのフックが呼ばれた後に開始された "
#~ "Traffic Server に対する接続が Traffic Server によって accept されると仮定"
#~ "し、そのことを外部プロセスに通知する便利な場所とできます。"
