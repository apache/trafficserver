# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 6.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-30 14:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../../developer-guide/plugins/index.en.rst:23
msgid "Plugin Development"
msgstr ""

#~ msgid "**API Hooks Corresponding to States**"
#~ msgstr "**API フックと状態の関係**"

#~ msgid "**Blacklist Plugin**"
#~ msgstr "**ブラックリストプラグイン**"

#~ msgid "**Simplified HTTP Transaction**"
#~ msgstr "**簡略化された HTTP トランザクション**"

#~ msgid "API Hooks Corresponding to States Listed in"
#~ msgstr "リストの状態に対応した API フック"

#~ msgid ""
#~ "An HTTP transaction consists of a client request for a web document and "
#~ "Traffic Server's response. The response could be the requested web "
#~ "server content or it could be an error message. The content could come "
#~ "from the Traffic Server cache or Traffic Server might fetch it from the "
#~ "origin server. The following diagram shows some states in a typical "
#~ "transaction - specifically, the scenario wherein content is served from "
#~ "cache."
#~ msgstr ""
#~ "HTTP トランザクションはウェブドキュメントに対するクライアントリクエスト"
#~ "と Traffic Server のレスポンスから成立します。レスポンスは要求されたウェ"
#~ "ブサーバーのコンテンツになるかも知れないし、エラーメッセージになるかも知"
#~ "れません。コンテンツは Traffic Server のキャッシュから配信されるかも知れ"
#~ "ませんし Traffic Server がオリジンサーバーから取得するであろうものから配"
#~ "信されるかも知れません。以下の図は典型的なトランザクション、特にコンテン"
#~ "ツがキャッシュから配信される際のシナリオにおける幾つかの状態を示したもの"
#~ "です。"

#~ msgid "Blacklist Plugin"
#~ msgstr "ブラックリストプラグイン"

#~ msgid "HTTP Transaction"
#~ msgstr "HTTP トランザクション"

#~ msgid ""
#~ "If the content is fresh, then Traffic Server sends a reply header to the "
#~ "client. If the content is stale, then Traffic Server opens a connection "
#~ "to the origin server and requests the content. The figure above, :ref:"
#~ "`SimplifiedHTTPTransaction`, does *not* show behavior in the event of an "
#~ "error. If there is an error at a any stage, then the HTTP state machine "
#~ "jumps to the \"send reply header\" state and sends a reply. If the reply "
#~ "is an error, then the transaction closes. If the reply is not an error, "
#~ "then Traffic Server first sends the response content before it closes "
#~ "the transaction."
#~ msgstr ""
#~ "コンテンツが新鮮である場合、 Traffic Server はクライアントにリプライヘッ"
#~ "ダーを送信します。コンテンツが新鮮ではない場合、 Traffic Server はオリジ"
#~ "ンサーバへコネクションを open し、コンテンツをリクエストします。上図、 :"
#~ "ref:`SimplifiedHTTPTransaction` はエラーのイベントにおける振る舞いを示し"
#~ "て *いません。* いずれかの段階でエラーがあった場合、 HTTP ステートマシン"
#~ "は \"send reply header\" 状態にジャンプし、返信をします。返信がエラーだっ"
#~ "た場合、トランザクションは close します。返信がエラーでなかった場合、 "
#~ "Traffic Server はトランザクションを close する前にまずレスポンスコンテン"
#~ "ツを送信します。"

#~ msgid ""
#~ "In the diagram above, Traffic Server accepts the client connection, "
#~ "reads the request headers, looks up the origin server's IP address, and "
#~ "looks for the requested content in the cache. If the content is not in "
#~ "the cache (a \"miss\"), then Traffic Server opens a connection to the "
#~ "origin server and issues a request for the content. If the content is in "
#~ "the cache (a \"hit\"), then Traffic Server checks it for freshness."
#~ msgstr ""
#~ "上の図において、 Traffic Server はクライアントコネクションを accept し、"
#~ "リクエストヘッダーを読込み、オリジンサーバの IP アドレスをルックアップ"
#~ "し、キャッシュ上でリクエストされたコンテンツを検索します。キャッシュにコ"
#~ "ンテンツがない場合（ \"ミス\" ）、 Traffic Server はオリジンサーバへのコ"
#~ "ネクションを open し、コンテンツのリクエストを発行します。キャッシュにコ"
#~ "ンテンツがある場合（ \"ヒット\" ）、 Traffic Server はフレッシュネスを"
#~ "チェックします。"

#~ msgid "Simplified HTTP Transaction"
#~ msgstr "簡略化された HTTP トランザクション"

#~ msgid "Traffic Server HTTP State Machine"
#~ msgstr "Traffic Server HTTP ステートマシン"

#~ msgid ""
#~ "Traffic Server calls the Blacklist plugin right after the origin server "
#~ "DNS lookup. The plugin checks the requested host against a list of "
#~ "blacklisted servers; if the request is allowed, then the transaction "
#~ "proceeds. If the host is forbidden, then the Blacklist plugin sends the "
#~ "transaction into an error state. When the HTTP state machine gets to the "
#~ "\"send reply header\" state, it then calls the Blacklist plugin to "
#~ "provide the error message that's sent to the client."
#~ msgstr ""
#~ "Traffic Server はオリジンサーバの DNS ルックアップの直後にブラックリスト"
#~ "プラグインを呼び出します。このプラグインはリクエストされたホストをブラッ"
#~ "クリストに載ったサーバのリストと照合します。リクエストが許可される場合、"
#~ "トランザクションは進みます。ホストが許可されない場合、ブラックリストプラ"
#~ "グインはトランザクションをエラー状態に送ります。 HTTP ステートマシンが "
#~ "\"send reply header\" 状態を取得した際、ブラックリストプラグインはクライ"
#~ "アントへ送信するエラーメッセージを提供する為に呼び出します。"

#~ msgid ""
#~ "Traffic Server performs sophisticated HTTP caching and proxying. "
#~ "Important features include checking for alternates and document "
#~ "freshness, filtering, supporting cache hierarchies, and hosting. Traffic "
#~ "Server handles thousands of client requests at a time and each request "
#~ "is handled by an HTTP state machine. These machines follow a complex "
#~ "state diagram that includes all of the states required to support "
#~ "Traffic Server's features. The Traffic Server API provides hooks to a "
#~ "subset of these states, chosen for their relevance to plugins. You can "
#~ "view the API hooks and corresponding HTTP states in the :ref:`http-txn-"
#~ "state-diagram`."
#~ msgstr ""
#~ "Traffic Server は高度な HTTP キャッシュとプロキシを行います。重要な特徴と"
#~ "してオルタネイトとドキュメントのフレッシュネスのチェック、フィルタリン"
#~ "グ、階層的キャッシュのサポート、そしてホスティングを含みます。 Traffic "
#~ "Server は同時に数千のクライアントリクエストを処理し、各リクエストは HTTP "
#~ "ステートマシンにより処理されます。これらのマシンは Traffic Server の機能"
#~ "をサポートするために要求される状態の全てを含む、複雑な状態遷移図に従いま"
#~ "す。 Traffic Server API は、プラグインとの関連を選択されたこれらの状態の"
#~ "サブセットへのフックを提供します。 :ref:`http-txn-state-diagram` でAPI "
#~ "フックと関係する HTTP 状態が見られます。"

#~ msgid "Types of Hooks"
#~ msgstr "フックのタイプ"

#~ msgid ""
#~ "You use hooks as triggers to start your plugin. The name of a hook "
#~ "reflects the Traffic Server state that was *just completed*. For "
#~ "example, the \"OS DNS lookup\" hook wakes up a plugin right *after* the "
#~ "origin server DNS lookup. For a plugin that requires the IP address of "
#~ "the requested origin server, this hook is the right one to use. The "
#~ "Blacklist plugin works in this manner, as shown in the :ref:"
#~ "`BlackListPlugin` diagram below."
#~ msgstr ""
#~ "プラグインを開始するトリガーとしてフックを使用できます。フックの名前は"
#~ "ちょうど完了した Traffic Server 状態を示します。例えば、 \"OS DNS lookup"
#~ "\" フックはオリジンサーバの DNS ルックアップの直 *後* にプラグインが動作"
#~ "します。 リクエストされたオリジンサーバの IP アドレスを要求するプラグイン"
#~ "のため、このフックは使用するのが正しいです。ブラックリストプラグインは下"
#~ "図の :ref:`BlackListPlugin` で示す通り、この方法で動作します。"
