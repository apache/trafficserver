# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, dev@trafficserver.apache.org
# This file is distributed under the same license as the Apache Traffic
# Server package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 6.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-30 14:07+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../../admin-guide/plugins/cacheurl.en.rst:23
#, fuzzy
msgid "Cache URL Plugin"
msgstr "CacheURL プラグイン"

#: ../../../admin-guide/plugins/cacheurl.en.rst:27
msgid ""
"This plugin is deprecated as of v6.2.0 and will be removed as of v7.0.0. It "
"is replaced by a new :ref:`admin-plugins-cachekey` and you should change "
"your configurations to use the new plugin instead. Please find some "
"examples below."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:31
#, fuzzy
msgid ""
"This plugin allows you to change the :term:`cache key` that is used for "
"caching a request by using any portion of the URL via regular expressions."
msgstr ""
"このプラグインは正規表現により URL の一部を使用することでリクエストをキャッ"
"シュする際に用いられるキーを変更することを可能にします。異なる URL で同じコ"
"ンテンツ ( 例えばミラーサイト ) のリクエストが一度だけキャッシュされるように"
"設計されています。"

#: ../../../admin-guide/plugins/cacheurl.en.rst:35
msgid "Purpose"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:37
msgid ""
"By default |TS| generates keys for cache objects from the full request URL. "
"Future requests will only be able to use the existing cache object if they "
"result in the same cache key. It can be the case, however, that the same "
"content is accessible through more than one request URL. Without any "
"special configuration, that same content will result in multiple cache "
"objects based on the differing URLs."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:44
msgid ""
"In this scenario, it can be very beneficial to allow |TS| to reuse a cache "
"object for multiple URLs. This plugin enables that behavior, by allowing "
"the administrator to define custom patterns for generating cache keys for "
"some, or all, of their site's URLs. Uninteresting or irrelevant portions of "
"request URLs may be removed, or altered, before the cache key is created "
"using the full power of regular expressions."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:52
msgid "Installation"
msgstr "インストール"

#: ../../../admin-guide/plugins/cacheurl.en.rst:54
msgid ""
"This plugin is considered stable and is included with |TS| by default. "
"There are no special steps necessary for its installation."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:60
msgid "Configuration"
msgstr "設定"

#: ../../../admin-guide/plugins/cacheurl.en.rst:62
#, fuzzy
msgid ""
"Enable the plugin by modifying :file:`plugin.config` to include the plugin::"
msgstr ":file:`plugin.config` ファイルにプラグインを追加する。"

#: ../../../admin-guide/plugins/cacheurl.en.rst:66
#, fuzzy
msgid ""
"Create a ``cacheurl.config`` file in the plugin directory with the url "
"regex patterns you wish to match, using the following format::"
msgstr ""
"プラグインディレクトリにマッチさせる URL 正規表現パターンを記載した "
"``cacheurl.config`` ファイルを作成する。"

#: ../../../admin-guide/plugins/cacheurl.en.rst:71
msgid ""
"The ``<pattern>`` is a regular expression (PCRE) applied against the "
"incoming request URL. The ``<replacement>`` may contain ``$1``, ``$2``, and "
"so on, which will be replaced with the appropriate matching group from "
"``<pattern>``."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:76
msgid ""
"Reload your |TS| configuration with :option:`traffic_ctl config reload`."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:79
msgid "Logging"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:81
msgid ""
"A new log file will be generated by this plugin, containing entries for "
"each incident of an incoming URL's cache key being altered, located in the |"
"TS| log directory and named ``cacheurl.log``."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:86
msgid "Examples"
msgstr "例"

#: ../../../admin-guide/plugins/cacheurl.en.rst:88
msgid ""
"While many possibilities exist, limited really only by your site's URL "
"scheme and the capabililties of PCRE regular expressions, the following are "
"examples of a few situations |TS| administrators may encounter."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:93
msgid "Multiple Domains, One Cache Object"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:95
msgid ""
"If you have multiple subdomains which serve the same file content, there "
"may be no reason to duplicate their storage (leading to higher churn and "
"faster potential eviction of still-fresh objects) in your |TS| cache. By "
"default, however, the differing subdomains will lead to differing cache "
"keys. To work around this, a pattern like the following can be used to "
"create a single cache key which will be valid for all subdomains::"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:104
msgid ""
"Now, the domains ``s1.example.com``, ``s2.example.com``, and ``s3.example."
"com`` will effectively share cache objects. Adding a unique suffix "
"(``TSINTERNAL`` in this example) to the cache key guarantees that it won't "
"clash with a real URL should s.example.com exist."
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:110
#: ../../../admin-guide/plugins/cacheurl.en.rst:128
#: ../../../admin-guide/plugins/cacheurl.en.rst:145
msgid "Converting to :ref:`admin-plugins-cachekey`"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:112
#: ../../../admin-guide/plugins/cacheurl.en.rst:130
#: ../../../admin-guide/plugins/cacheurl.en.rst:147
msgid ""
"You could do the same with :ref:`admin-plugins-cachekey` by adding the "
"following to the mapping rules::"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:118
msgid "Ignoring Some Query Parameters"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:120
msgid ""
"If your site attaches, for example, session information to URLs, even on "
"pages which do not include session-specific content and may be safely "
"cached, you can add a pattern which strips this unnecessary information "
"from the URL before generating a cache key, while still retaining important "
"query parameters::"
msgstr ""

#: ../../../admin-guide/plugins/cacheurl.en.rst:136
#, fuzzy
msgid "Ignore Query String on Specific Pages"
msgstr "特定のページでクエリー文字列を完全に無視する。"

#: ../../../admin-guide/plugins/cacheurl.en.rst:138
msgid ""
"To completely ignore a query string for a specific page, it's quite easy to "
"simply match and drop everything from the ``?`` query string opener to the "
"end of the URL::"
msgstr ""

#~ msgid "This plugin is only built if the configure option ::"
#~ msgstr "このプラグインはビルド時の設定オプションに ::"

#~ msgid "is given at build time."
#~ msgstr "が与えられている場合にのみビルドされます。"

#~ msgid ""
#~ "Cache based on only some parts of a query string (e.g. ignore session "
#~ "information). This plucks out the id and format query string variables "
#~ "and only considers those when making the cache key."
#~ msgstr ""
#~ "クエリー文字列の一部のみをもとにキャッシュする ( 例 セッション情報を無視"
#~ "する ) 。これは id と format クエリー文字列変数を抜き取り、キャッシュキー"
#~ "を生成する際にはそれらだけを考慮します。"

#~ msgid "More docs"
#~ msgstr "参考文献"

#~ msgid ""
#~ "Start traffic server. Any rewritten URLs will be written to ``cacheurl."
#~ "log`` in the log directory by default."
#~ msgstr ""
#~ "Traffic Server を起動。書き換えられた URL はデフォルトではログディレクト"
#~ "リの ``cacheurl.log`` に書かれます。"

#~ msgid ""
#~ "The url_pattern is a regular expression (pcre). The replacement can "
#~ "contain $1, $2 and so on, which will be replaced with the appropriate "
#~ "matching group from the pattern."
#~ msgstr ""
#~ "url_pattern は正規表現 (pcre) です。replacement は $1 、$2 などを含むこと"
#~ "ができ、パターンの適切なマッチンググループと置き換えられます。"

#~ msgid ""
#~ "There are some docs on cacheurl in Chinese, please find them in the "
#~ "following:"
#~ msgstr ""
#~ "cacheurl についていくつかの中国語のドキュメントがあります。以下から探して"
#~ "ください。"

#~ msgid ""
#~ "To make files from s1.example.com, s2.example.com and s3.example.com all "
#~ "be cached with the same key. Adding a unique suffix (TSINTERNAL in this "
#~ "example) to the cache key guarantees that it won't clash with a real URL "
#~ "should s.example.com exist."
#~ msgstr ""
#~ "s1.example.com 、s2.example.com そして s3.example.com からのファイルすべ"
#~ "てが同じキーでキャッシュされるようにする。キャッシュキーが実在する URL s."
#~ "example.com と衝突しないことを保証するために一意なサフィックス ( この例で"
#~ "は TSINTERNAL ) を追加します。"

#~ msgid ""
#~ "``http://s[123].example.com/(.*)  http://s.example.com.TSINTERNAL/$1``"
#~ msgstr ""
#~ "``http://s[123].example.com/(.*)  http://s.example.com.TSINTERNAL/$1``"

#~ msgid ""
#~ "``http://www.example.com/some/page.html(?:\\?|$) http://www.example.com/"
#~ "some/page.html``"
#~ msgstr ""
#~ "``http://www.example.com/some/page.html(?:\\?|$) http://www.example.com/"
#~ "some/page.html``"

#~ msgid ""
#~ "``http://www.example.com/video\\?.*?\\&?(id=[0-9a-f]*).*?\\&(format=[a-"
#~ "z]*) http://video-srv.example.com.ATSINTERNAL/$1&$2``"
#~ msgstr ""
#~ "``http://www.example.com/video\\?.*?\\&?(id=[0-9a-f]*).*?\\&(format=[a-"
#~ "z]*) http://video-srv.example.com.ATSINTERNAL/$1&$2``"

#~ msgid "``url_pattern   cache_key_replacement``"
#~ msgstr "``url_pattern   cache_key_replacement``"

#~ msgid "https://blog.zymlinux.net/index.php/archives/195"
#~ msgstr "https://blog.zymlinux.net/index.php/archives/195"
