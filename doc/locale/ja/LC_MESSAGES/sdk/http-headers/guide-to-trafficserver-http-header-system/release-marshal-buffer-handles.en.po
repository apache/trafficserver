# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:2
msgid "Release Marshal Buffer Handles"
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:21
msgid ""
"When you fetch a component object or create a new object, you get back a "
"handle to the object location. The handle is either an ``TSMLoc`` for an "
"object location or ``char *`` for a string location. You can manipulate the "
"object through these handles, but when you are finished you need to release "
"the handle to free up system resources."
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:27
msgid ""
"The general guideline is to release all ``TSMLoc`` and string handles you "
"retrieve. The one exception is the string returned by ``TSUrlStringGet``, "
"which must be freed by a call to ``TSfree``."
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:31
msgid ""
"The handle release functions expect three arguments: the marshal buffer "
"containing the data, the location of the parent object, and the location of "
"the object to be released. The parent location is usually clear from the "
"creation of the ``TSMLoc`` or string. For example, if your plugin had the "
"following calls:"
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:42
msgid "then your plugin would have to call:"
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:48
msgid ""
"If an ``TSMLoc`` is obtained from a transaction, then it does not have a "
"parent ``TSMLoc``. Use the null ``TSMLoc`` constant ``TS_NULL_MLOC`` as its "
"parent. For example, if your plugin calls:"
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:56
msgid "then you must release ``hdr_loc`` with:"
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:62
msgid ""
"You need to use ``TS_NULL_MLOC`` to release any ``TSMLoc`` handles retrieved"
" by the ``TSHttpTxn*Get`` functions."
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:65
msgid "Here's an example using a new ``TSMimeHdrField`` function:"
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:74
msgid "See the sample plugins for many more examples."
msgstr ""

#: ../../sdk/http-headers/guide-to-trafficserver-http-header-system/release-marshal-buffer-handles.en.rst:78
msgid ""
"You should release handles before reenabling the HTTP transaction. In other "
"words, call ``TSHandleMLocRelease`` before ``TSHttpTxnReenable``."
msgstr ""
