# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:2
msgid "The Sample Null Transform Plugin"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:21
msgid ""
"This section provides a step-by-step description of what the null transform "
"plugin does, along with sections of code that apply. For context, you can "
"find each code snippet in the complete source code. Some of the error "
"checking details are left out - to give the description a step-by-step flow,"
" only the highlights of the transform are included."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:28
msgid "Below is an overview of the null transform plugin:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:30
msgid "Gets a handle to HTTP transactions."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:40
msgid ""
"With this ``TSPluginInit`` routine, the plugin is called back every time "
"Traffic Server reads a response header."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:43
msgid "Checks to see if the transaction response is transformable."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:56
msgid ""
"The default behavior for transformations is to cache the transformed content"
" (you can also tell Traffic Server to cache untransformed content, if you "
"want). Therefore, only responses received directly from an origin server "
"need to be transformed. Objects served from cache are already transformed. "
"To determine whether the response is from the origin server, the routine "
"``transformable`` checks the response header for the \"200 OK\" server "
"response."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:82
msgid ""
"If the response is transformable, then the plugin creates a transformation "
"vconnection that gets called back when the response data is ready to be "
"transformed (as it is streaming from the origin server)."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:97
msgid ""
"The previous code fragment shows that the handler function for the "
"transformation vconnection is ``null_transform``."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:100
msgid ""
"Get a handle to the output vconnection (that receives data from the "
"tranformation)."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:108
msgid ""
"Get a handle to the input VIO. (See the ``handle_transform`` function.)"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:116
msgid ""
"This is so that the transformation can get information about the upstream "
"vconnection's write operation to the input buffer."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:119
msgid ""
"Initiate a write to the output vconnection of the specified number of bytes."
" When the write is initiated, the transformation expects to receive "
"``WRITE_READY``, ``WRITE_COMPLETE``, or ``ERROR`` events from the output "
"vconnection. See the ``handle_transform`` function for the following code "
"fragment:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:131
msgid ""
"Copy data from the input buffer to the output buffer. See the "
"``handle_transform`` function for the following code fragment:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:140
msgid ""
"Tell the input buffer that the transformation has read the data. See the "
"``handle_transform`` function for the following code fragment:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:147
msgid ""
"Modify the input VIO to tell it how much data has been read (increase the "
"value of ``ndone``). See the ``handle_transform`` function for the following"
" code fragment:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:156
msgid ""
"If there is more data left to read ( if ndone < nbytes), then the "
"``handle_transform`` function wakes up the downstream vconnection with a "
"reenable and wakes up the upstream vconnection by sending it "
"``WRITE_READY``:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:173
msgid ""
"The process of passing data through the transformation is illustrated in the"
" following diagram. The downstream vconnections send ``WRITE_READY`` events "
"when they need more data; when data is available, the upstream vconnections "
"reenable the downstream vconnections. In this instance, the "
"``TSVIOReenable`` function sends ``TS_EVENT_IMMEDIATE``."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:180
msgid ""
"**Passing Data Through a Transformation** "
"{#PassingDataThroughaTransformation}"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:186
msgid "Passing Data Through a Transformation"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:188
msgid ""
"If the ``handle_transform`` function finds there is no more data to read, "
"then it sets ``nbytes`` to ``ndone`` on the output (downstream) VIO and "
"wakes up the output vconnection with a reenable. It then triggers the end of"
" the write operation from the upstream vconnection by sending the upstream "
"vconnection a ``WRITE_COMPLETE`` event."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:203
msgid ""
"When the upstream vconnection receives the ``WRITE_COMPLETE`` event, it will"
" probably shut down the write operation."
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:206
msgid ""
"Similarly, when the downstream vconnection has consumed all of the data, it "
"sends the transformation a ``WRITE_COMPLETE`` event. The transformation "
"handles this event with a shut down (the transformation shuts down the write"
" operation to the downstream vconnection). See the ``null_plugin`` function "
"for the following code fragment:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:220
msgid "The following diagram illustrates the flow of events:"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:222
msgid "**Ending the Transformation** {#EndingTransformation}"
msgstr ""

#: ../../sdk/http-transformation-plugin/sample-null-transformation-plugin.en.rst:227
msgid "Ending the Transformation"
msgstr ""
