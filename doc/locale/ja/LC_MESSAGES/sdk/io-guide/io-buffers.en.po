# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sdk/io-guide/io-buffers.en.rst:2
msgid "IO Buffers"
msgstr ""

#: ../../sdk/io-guide/io-buffers.en.rst:21
msgid ""
"The IO buffer data structure is the building block of the vconnection "
"abstraction. An **IO buffer** (``TSIOBuffer``) is composed of a list of "
"buffer blocks that point to buffer data. Both the buffer block "
"(``TSIOBufferBlock``) and buffer data (``TSIOBufferData``) data structures "
"are reference-counted, so they can reside in multiple buffers at the same "
"time. This makes it extremely efficient to copy data from one IO buffer to "
"another via ``TSIOBufferCopy``, since Traffic Server must only copy pointers"
" and adjust reference counts appropriately (and doesn't actually copy any "
"data)."
msgstr ""

#: ../../sdk/io-guide/io-buffers.en.rst:31
msgid ""
"The IO buffer abstraction provides for a single writer and multiple readers."
" In order for the readers to have no knowledge of each other, they "
"manipulate IO buffers through the ``TSIOBufferReader`` data structure. Since"
" only a single writer is allowed, there is no corresponding "
"``TSIOBufferWriter`` data structure. The writer simply modifies the IO "
"buffer directly. To see an example that illustrates how to use IOBuffers, "
"refer to the sample code in the description of ```TSIOBufferBlockReadStart``"
" "
"<http://people.apache.org/~amc/ats/doc/html/ts_8h.html#a367203e6e2cf4349e019952782deb96c>`__."
msgstr ""

#: ../../sdk/io-guide/io-buffers.en.rst:40
msgid "Additional information about IO buffer functions:"
msgstr ""

#: ../../sdk/io-guide/io-buffers.en.rst:42
msgid ""
"The ``TSIOBufferReader`` data structure tracks how much data in "
"``TSIOBuffer`` has been read. It has an offset number of bytes that is the "
"current start point of a particular buffer reader (for every read operation "
"on an ``TSIOBuffer``, you must allocate an ``TSIOBufferReader``)."
msgstr ""

#: ../../sdk/io-guide/io-buffers.en.rst:48
msgid ""
"Bytes that have already been read may not necessarily be freed within the "
"``TSIOBuffer``. To consume bytes that have been read, you must call "
"``TSIOBufferConsume``."
msgstr ""
