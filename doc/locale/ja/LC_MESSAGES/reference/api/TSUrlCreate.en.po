# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSUrlCreate.en.rst:22
msgid "TSUrlCreate"
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:25
msgid "Synopsis"
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:27
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:59
msgid "Description"
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:61
msgid ""
"The URL data structure is a parsed version of a standard internet URL. The "
"Traffic Server URL API provides access to URL data stored in marshal "
"buffers. The URL functions can create, copy, retrieve or delete entire URLs,"
" and retrieve or modify parts of URLs, such as their port or scheme "
"information."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:67
msgid ""
":func:`TSUrlCreate` creates a new URL within the marshal buffer bufp. "
"Release the resulting handle with a call to TSHandleMLocRelease. "
":func:`TSUrlClone` copies the contents of the URL at location src_url within"
" the marshal buffer src_bufp to a location within the marshal buffer "
"dest_bufp. Release the returned handle with a call to "
":func:`TSHandleMLocRelease`."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:74
msgid ""
":func:`TSUrlCopy` copies the contents of the URL at location src_url within "
"the marshal buffer src_bufp to the location dest_url within the marshal "
"buffer dest_bufp. :func:`TSUrlCopy` works correctly even if src_bufp and "
"dest_bufp point to different marshal buffers. It is important for the "
"destination URL (its marshal buffer and :type:`TSMLoc`) to have been created"
" before copying into it."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:81
msgid ""
":func:`TSUrlPrint` formats a URL stored in an :type:`TSMBuffer` to an "
":type:`TSIOBuffer`."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:83
msgid ""
":func:`TSUrlParse` parses a URL. The start pointer is both an input and an "
"output parameter and marks the start of the URL to be parsed. After a "
"successful parse, the start pointer equals the end pointer. The end pointer "
"must be one byte after the last character you want to parse. The URL parsing"
" routine assumes that everything between start and end is part of the URL. "
"It is up to higher level parsing routines, such as "
":func:`TSHttpHdrParseReq`, to determine the actual end of the URL."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:91
msgid ""
":func:`TSUrlLengthGet` calculates the length of the URL located at offset "
"within the marshal buffer bufp if it were returned as a string. This length "
"will be the same as the length returned by :func:`TSUrlStringGet`."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:95
msgid ""
":func:`TSUrlStringGet` constructs a string representation of the URL located"
" at offset within the marshal buffer bufp. :func:`TSUrlStringGet` stores the"
" length of the allocated string in the parameter length. This is the same "
"length that :func:`TSUrlLengthGet` returns. The returned string is allocated"
" by a call to :func:`TSmalloc` and must be freed by a call to "
":func:`TSfree`. If length is NULL then no attempt is made to de-reference "
"it."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:102
msgid ""
":func:`TSUrlSchemeGet`, :func:`TSUrlUserGet`, :func:`TSUrlPasswordGet`, "
":func:`TSUrlHostGet`, :func:`TSUrlHttpParamsGet`, :func:`TSUrlHttpQueryGet` "
"and :func:`TSUrlHttpFragmentGet` each retrieve an internal pointer to the "
"specified portion of the URL from the marshall buffer bufp. The length of "
"the returned string is placed in length and a pointer to the URL portion is "
"returned. The returned string is not guaranteed to be NUL-terminated."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:109
msgid ""
":func:`TSUrlSchemeSet`, :func:`TSUrlUserSet`, :func:`TSUrlPasswordSet`, "
":func:`TSUrlHostSet`, :func:`TSUrlHttpParamsSet`, :func:`TSUrlHttpQuerySet` "
"and :func:`TSUrlHttpFragmentSet` each set the specified portion of the URL "
"located at offset within the marshal buffer bufp to the string value. If "
"length is -1 then these functions assume that value is NUL-terminated. "
"Otherwise, the length of the string value is taken to be length. These "
"functions copy the string to within bufp, so it can be subsequently modified"
" or deleted."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:117
msgid ""
":func:`TSUrlPortGet` retrieves the port number portion of the URL located at"
" offset within the marshal buffer bufp, It returns 0 if there is no port "
"number."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:121
msgid ""
":func:`TSUrlPortSet` sets the port number portion of the URL located at "
"offset within the marshal buffer bufp to the value port."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:124
msgid ""
":func:`TSStringPercentEncode` performs percent-encoding of the string str, "
"storing the new string in the dst buffer. The length parameter will be set "
"to the new (encoded) string length, or 0 if the encoding failed. "
"TSUrlPercentEncode is similar but operates on a URL object. If the optional "
"map parameter is provided, it should be a map of characters to encode."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:131
msgid ""
":func:`TSStringPercentDecode` perform percent-decoding of the string in the "
"buffer, writing to the dst buffer. The source and destination can be the "
"same, in which case they overwrite. The decoded string is always guaranteed "
"to be no longer than the source string."
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:137
msgid "See also"
msgstr ""

#: ../../reference/api/TSUrlCreate.en.rst:139
msgid ""
":manpage:`TSAPI(3ts)`, :manpage:`TSMBufferCreate(3ts)`, "
":manpage:`TSmalloc(3ts)`"
msgstr ""
