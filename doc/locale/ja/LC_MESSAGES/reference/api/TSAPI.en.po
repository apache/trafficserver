# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSAPI.en.rst:21
msgid "TSAPI"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:24
msgid "Synopsis"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:25
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:26
msgid "`#include <ts/remap.h>`"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:29
msgid "Description"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:30
msgid ""
"The Apache Traffic Server API enables you to create plugins, using the C "
"programming language, that customize the behavior of your Traffic Server "
"installation."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:34
msgid ""
"Traffic Server enables sophisticated caching and processing of web-related "
"traffic, such as DNS and HTTP requests and responses. Traffic Server itself "
"consists of an event-driven loop that can be simplified as follows::"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:44
msgid ""
"You compile your plugin source code to create a shared library that Traffic "
"Server loads when it is started. Your plugin contains callback functions "
"that are registered for specific Traffic Server events. When Traffic Server "
"needs to process an event, it invokes any and all call-back functions you've"
" registered for that event type."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:51
msgid "Possible uses for plugins include the following:"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:53
msgid ""
"HTTP processing plugins can filter, blacklist, authorize users or transform "
"content."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:54
msgid ""
"Protocol plugins can enable Traffic Server to proxy-cache new protocol "
"content."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:55
msgid ""
"A blacklisting plugin denies attempts to access web sites that are off-"
"limits."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:56
msgid "Append transform plugins add data to HTTP response content."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:57
msgid "An image conversion plugin transforms JPEG images to GIF images."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:58
msgid ""
"Compression plugins send response content to a compression server that "
"compresses the data (alternatively, a compression library local to the "
"Traffic Server host machine could do the compression)."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:61
msgid ""
"Authorization plugins check a user's permissions to access particular web "
"sites. The plugin could consult a local authorization program or send "
"queries to an authorization server."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:64
msgid ""
"A plugin that gathers client information from request headers and enters "
"this information in a database."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:66
msgid ""
"A protocol plugin listen for specific protocol requests on a designated port"
" and then uses Traffic Server's proxy server and cache to serve client "
"requests."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:71
msgid "Naming conventions"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:73
msgid "The Traffic Server API adheres to the following naming conventions:"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:75
msgid ""
"The TS prefix is used for all function and variable names defined in the "
"Traffic Server API. For example, :data:`TS_EVENT_NONE`, :type:`TSMutex`, and"
" :func:`TSContCreate`."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:78
msgid ""
"Enumerated values are always written in all uppercase letters. For example, "
":data:`TS_EVENT_NONE` and :data:`TS_VC_CLOSE_ABORT`."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:80
msgid ""
"Constant values are all uppercase; enumerated values can be seen as a subset"
" of constants. For example, :data:`TS_URL_SCHEME_FILE` and "
":data:`TS_MIME_FIELD_ACCEPT`."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:83
msgid ""
"The names of defined types are mixed-case. For example, :type:`TSHttpSsn` "
"and :func:`TSHttpTxn`. :func:`TSDebug`"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:85
msgid ""
"Function names are mixed-case. For example, :func:`TSUrlCreate` and "
":func:`TSContDestroy`."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:87
msgid ""
"Function names use the following subject-verb naming style: "
"TS-<subject>-<verb>, where <subject> goes from general to specific. This "
"makes it easier to determine what a function does by reading its name. For "
"example, the function to retrieve the password field (the specific subject) "
"from a URL (the general subject) is :func:`TSUrlPasswordGet`."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:93
msgid ""
"Common verbs like Create, Destroy, Get, Set, Copy, Find, Retrieve, Insert, "
"Remove, and Delete are used only when appropriate."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:97
msgid "Plugin loading and configuration"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:99
msgid ""
"When Traffic Server is first started, it consults the plugin.config file to "
"determine the names of all shared plugin libraries that need to be loaded. "
"The plugin.config file also defines arguments that are to be passed to each "
"plugin's initialization function, :func:`TSPluginInit`. The "
":file:`records.config` file defines the path to each plugin shared library."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:106
msgid ""
"The sample :file:`plugin.config` file below contains a comment line, a blank"
" line, and two plugin configurations::"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:113
msgid ""
"Each plugin configuration in the :file:`plugin.config` file resembles a UNIX"
" or DOS shell command; each line in :file:`plugin.config` cannot exceed 1023"
" characters."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:117
msgid ""
"The first plugin configuration is for a plugin named my-plugin.so. It "
"contains three arguments that are to be passed to that plugin's "
"initialization routine. The second configuration is for a plugin named some-"
"plugin.so; it contains three arguments. The last argument, "
"$proxy.config.http.cache.on, is actually a configuration variable. Traffic "
"Server will look up the specified configuration variable and substitute its "
"value."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:125
msgid ""
"Plugins are loaded and initialized by Traffic Server in the order they "
"appear in the :file:`plugin.config` file."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:129
msgid "Plugin initialization"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:131
msgid ""
"Each plugin must define an initialization function named "
":func:`TSPluginInit` that Traffic Server invokes when the plugin is loaded. "
":func:`TSPluginInit` is commonly used to read configuration information and "
"register hooks for event notification."
msgstr ""

#: ../../reference/api/TSAPI.en.rst:138
msgid "Files"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:139
msgid ""
":file:`{CONFIG_DIR}/plugin.config`, :file:`{CONFIG_DIR}/records.config`"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:142
msgid "See also"
msgstr ""

#: ../../reference/api/TSAPI.en.rst:143
msgid ":manpage:`TSPluginInit(3ts)`"
msgstr ""
