#
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSDebug.en.rst:21
msgid "TSDebug"
msgstr "TSDebug"

#: ../../reference/api/TSDebug.en.rst:24
msgid "Synopsis"
msgstr "概要"

#: ../../reference/api/TSDebug.en.rst:25
msgid "`#include <ts/ts.h>`"
msgstr "`#include <ts/ts.h>`"

#: ../../reference/api/TSDebug.en.rst:39
msgid "Description"
msgstr "解説"

#: ../../reference/api/TSDebug.en.rst:41
msgid ""
":func:`TSError` is similar to :func:`printf` except that instead of writing "
"the output to the C standard output, it writes output to the Traffic Server "
"error log."
msgstr ""
":func:`TSError` は C 標準出力に書き込む代わりに Traffic Server のエラーログ"
"に書き込むことを除けば :func:`printf` に似ています。"

#: ../../reference/api/TSDebug.en.rst:45
msgid ""
":func:`TSDebug` is the same as :func:`TSError` except that it only logs the "
"debug message if the given debug tag is enabled. It writes output to the "
"Traffic Server debug log."
msgstr ""
":func:`TSDebug` は与えられたデバッグタグが有効化されている場合にのみログメッ"
"セージを出力する点を除いて :func:`TSError` と同じです。"

#: ../../reference/api/TSDebug.en.rst:49
msgid ""
":func:`TSIsDebugTagSet` returns non-zero if the given debug tag is enabled."
msgstr ""
":func:`TSIsDebugTagSet` は与えられたデバッグタグが有効化されている場合に非ゼ"
"ロを返します。"

#: ../../reference/api/TSDebug.en.rst:52
msgid ""
"In debug mode, :macro:`TSAssert` Traffic Server to prints the file name, "
"line number and expression, and then aborts. In release mode, the "
"expression is not removed but the effects of printing an error message and "
"aborting are. :macro:`TSReleaseAssert` prints an error message and aborts "
"in both release and debug mode."
msgstr ""
"デバッグモードでは、:macro:`TSAssert` は Traffic Server にファイル名、行番"
"号、式を出力させ、処理を中断します。リリースモードでは、式の出力は残ります"
"が、エラーメッセージの出力と処理の中断は行われません。:macro:"
"`TSReleaseAssert` はリリースモードとデバッグモードのどちらでもエラーメッセー"
"ジの出力と処理の中断を行います。"

#: ../../reference/api/TSDebug.en.rst:65
msgid "Examples"
msgstr "例"

#: ../../reference/api/TSDebug.en.rst:67
msgid ""
"This example uses :func:`TSDebugSpecific` to log a message when a specific "
"debugging flag is enabled::"
msgstr ""
"この例は特定のデバッグフラグが有効になっている場合にメッセージをログに出力す"
"るために :func:`TSDebugSpecific` を使用しています。"

#: ../../reference/api/TSDebug.en.rst:78
msgid "See also"
msgstr "参考"

#: ../../reference/api/TSDebug.en.rst:79
msgid ":manpage:`TSAPI(3ts)`, :manpage:`printf(3)`"
msgstr ":manpage:`TSAPI(3ts)`, :manpage:`printf(3)`"

#: ../../reference/api/TSDebug.en.rst:58
msgid ""
":func:`TSDebugSpecific` emits a debug line even if the debug tag is turned "
"off, as long as debug flag is enabled. This can be used in conjunction "
"with :func:`TSHttpTxnDebugSet`, :func:`TSHttpSsnDebugSet`, :func:"
"`TSHttpTxnDebugGet` and :func:`TSHttpSsnDebugGet` to enable debugging on "
"specific session and transaction objects."
msgstr ""

#~ msgid ""
#~ ":func:`TSDebugSpecific` emits a debug line even if the debug tag is "
#~ "turned off, as long as debug flag is enabled. This can be used in "
#~ "conjuction with :func:`TSHttpTxnDebugSet`, :func:`TSHttpSsnDebugSet`, :"
#~ "func:`TSHttpTxnDebugGet` and :func:`TSHttpSsnDebugGet` to enable "
#~ "debugging on specific session and transaction objects."
#~ msgstr ""
#~ ":func:`TSDebugSpecific` はデバッグタグがオフにされていてもデバッグフラグ"
#~ "が有効化されてさえいればデバッグ行を出力します。これは特定のセッションと"
#~ "トランザクションオブジェクトでデバッグを有効化するために :func:"
#~ "`TSHttpTxnDebugSet` 、:func:`TSHttpSsnDebugSet` 、:func:"
#~ "`TSHttpTxnDebugGet` 、:func:`TSHttpSsnDebugGet` と組み合わせて使用される"
#~ "ことがあります。"
