# 
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSHttpHookAdd.en.rst:22
msgid "TSHttpHookAdd"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:25
msgid "Synopsis"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:26
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:33
msgid "Description"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:35
msgid ""
"Hooks are points in Apache Traffic Server transaction HTTP processing where "
"plugins can step in and do some work. Registering a plugin function for "
"callback amounts to adding the function to a hook. You can register your "
"plugin to be called back for every single transaction, or for specific "
"transactions only."
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:41
msgid ""
"HTTP :term:`transaction` hooks are set on a global basis using the function "
":func:`TSHttpHookAdd`. This means that the continuation specified as the "
"parameter to :func:`TSHttpHookAdd` is called for every transaction. "
":func:`TSHttpHookAdd` is typically called from :func:`TSPluginInit` or "
":func:`TSRemapInit`."
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:47
msgid ""
":func:`TSHttpSsnHookAdd` adds :arg:`contp` to the end of the list of HTTP "
":term:`session` hooks specified by :arg:`id`. This means that :arg:`contp` "
"is called back for every transaction within the session, at the point "
"specified by the hook ID. Since :arg:`contp` is added to a session, it is "
"not possible to call :func:`TSHttpSsnHookAdd` from the plugin initialization"
" routine; the plugin needs a handle to an HTTP session."
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:55
msgid ""
":func:`TSHttpTxnHookAdd` adds :arg:`contp` to the end of the list of HTTP "
"transaction hooks specified by :arg:`id`. Since :arg:`contp` is added to a "
"transaction, it is not possible to call :func:`TSHttpTxnHookAdd` from the "
"plugin initialization routine but only when the plugin has a handle to an "
"HTTP transaction."
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:63
msgid "Return values"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:65
msgid "None. Adding hooks is always successful."
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:68
msgid "Examples"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:70
msgid ""
"The following example demonstrates how to add global, session and "
"transaction hooks::"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:110
msgid "See also"
msgstr ""

#: ../../reference/api/TSHttpHookAdd.en.rst:111
msgid ""
":manpage:`TSAPI(3ts)`, :manpage:`TSContCreate(3ts)`, "
":manpage:`TSLifecycleHookAdd(3ts)`"
msgstr ""
