'''
Builds, installs, and enables an ATS plugin in the sandbox environment
'''
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

import os


def prepare_plugin(self, so_path, tsproc, plugin_args=""):
    """
    Installs and enables an ATS plugin in the sandbox environment.

    Args:
        so_path (str): The path to a built .so file.

        tsproc (Process): The Traffic Server process whose plugin.config should
        be configured to use the provided plugin.

        plugin_args (str): The arguments to provide the plugin in the
        plugin.config.
    """

    filename, extension = os.path.splitext(so_path)
    if extension != ".so":
        raise ValueError('so_path argument must have a ".so" extension. '
                         'Received: {}'.format(so_path))

    # Copy the shared object to the sandbox directory.
    plugin_dir = tsproc.Env['PROXY_CONFIG_PLUGIN_PLUGIN_DIR']
    tsproc.Setup.Copy(so_path, plugin_dir)

    # Add an entry to plugin.config.
    basename = os.path.basename(so_path)
    tsproc.Disk.plugin_config.AddLine("{0} {1}".format(basename, plugin_args))


ExtendTest(prepare_plugin, name="PreparePlugin")
