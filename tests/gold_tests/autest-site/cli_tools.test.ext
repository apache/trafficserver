'''
Tools to help with TestRun commands
'''

#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.


# allows the same command to be repeatedly run in parallel.
#
# example usage:
# curlcmd = 'curl -vs -k https:127.0.0.1:{port}'.format(port = ts.Variables.port)
#
# tr = Test.AddTestRun()
# ps = tr.SpawnCommands(cmd=cmdstr, count=25)
# tr.Processes.Default.StartBefore(ts)
# ts.StartAfter(*ps)
# tr.StillRunningAfter = ts
#
# Note that by default, the Default Process is created in this function.

def spawn_commands(self, cmd: str, count: int, retcode: int = 0, use_default: bool=True) -> list:
    '''
    Returns a list of `count` processes used to run `cmd` and expected to return `retcode`

    If use_default is True (default), sets the tests's default process.
    '''

    ret=[]

    if use_default:
        count = int(count) - 1
    for cnt in range(count):
        ret.append(
            self.Processes.Process(
                name="cmdline-{num}".format(num=cnt),
                cmdstr = cmd,
                returncode = retcode
                )
            )
    if use_default:
        self.Processes.Default.Command = cmd
        self.Processes.Default.ReturnCode = retcode
        self.Processes.Default.StartBefore(
            *ret
        )
    return ret

ExtendTestRun(spawn_commands, name="SpawnCommands")
