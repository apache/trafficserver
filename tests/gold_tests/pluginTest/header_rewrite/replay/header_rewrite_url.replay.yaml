#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

meta:
  version: "1.0"

sessions:
- transactions:

  #
  # Receive a 304 via header_rewrite.
  #
  - client-request:
      method: "GET"
      version: "1.1"
      url: /from_path?foo=bar
      headers:
        fields:
        - [ uuid, url-condition ]
        - [ Host, www.url.condition.com ]

    # The origin should not receive this response.
    server-response:
      status: 200
      reason: OK
      headers:
        fields:
        - [ Content-Length, 16 ]

    # Expect a 304 response per header_rewrite.
    proxy-response:
      status: 304

  #
  # Expect the path to be modified with a prepended //prepend/this
  #
  - client-request:
      method: "GET"
      version: "1.1"
      url: /original/path
      headers:
        fields:
        - [ uuid, set-destination-prefix ]
        - [ Host, www.set.destination.prefix.com ]

    # The origin should receive the response with the modified path.
    proxy-request:
      url:
      - [ path,     { value: //prepend/this/original/path, as: equal } ]

    server-response:
      status: 200
      reason: OK
      headers:
        fields:
        - [ Content-Length, 16 ]

    proxy-response:
      status: 200

  #
  # Expect the path to be modified with a prepended /prepend/this
  #
  - client-request:
      method: "GET"
      version: "1.1"
      url: /original/path
      headers:
        fields:
        - [ uuid, set-destination ]
        - [ Host, www.set.destination.com ]

    # The origin should receive the response with the modified path.
    proxy-request:
      url:
      - [ path,     { value: /prepend/this/original/path, as: equal } ]

    server-response:
      status: 200
      reason: OK
      headers:
        fields:
        - [ Content-Length, 16 ]

    proxy-response:
      status: 200

  #
  # Test the set-redirect operator.
  #
  - client-request:
      method: "GET"
      version: "1.1"
      url: /
      headers:
        fields:
        - [ uuid, set-redirect ]
        - [ Host, no_path.com ]

    # The origin should not receive this request since ATS should reply with a
    # redirect.
    server-response:
      status: 200
      reason: OK
      headers:
        fields:
        - [ Content-Length, 16 ]

    # Expect a 301 response per header_rewrite.
    proxy-response:
      status: 301
      headers:
        fields:
        - [ Location, { value: "http://no_path.com?name=brian/", as: equal } ]
