#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

meta:
    version: '1.0'

sessions:

- protocol:
  - name: tls
    sni: block.me.com
  - name: tcp
  - name: ip

  transactions:

  #
  # This GET request should be tunneled per sni, but rejected per sni.yaml ip_allow.
  #
  - client-request:
      method: GET
      version: "1.1"
      url: www.example.com:80
      headers:
        fields:
          - [ uuid, blocked-request ]
          - [ Host, www.example.com:80 ]

    # This should not reach the origin.
    server-response:
      status: 500

    # We expect ATS to reject this connection.
    proxy-response:
      status: 404

  # The following should not take place, but if it does, make the client fail.
  - client-request:
      method: GET
      version: "1.1"
      url: /get/something
      headers:
        fields:
          - [ uuid, blocked-tunneled-request ]
          - [ Host, www.example.com ]

    server-response:
      status: 200
      reason: OK
      headers:
        fields:
          - [ X-Response, blocked-tunneled-response ]

    proxy-response:
      status: 200
      headers:
        field:
          # Make sure the client doesn't get this response.
          - [ X-Response, { as: absent } ]

- protocol:
  - name: tls
    sni: allow.me.com
  - name: tcp
  - name: ip

  transactions:
  #
  # This should also be configured for tunneling, but allowed per sni.yaml ip_allow.
  #
  - client-request:
      method: GET
      version: "1.1"
      url: www.example.com:80
      headers:
        fields:
          - [ uuid, allowed-request ]
          - [ Host, www.example.com:80 ]

    # This should be tunneled to the origin.
    server-response:
      status: 200
      reason: OK
      headers:
        fields:
          - [ X-Response, allowed-response ]

    # We expect ATS to accept this connection and reply with a 200.
    proxy-response:
      status: 200
      headers:
        field:
          - [ X-Response, { value: allowed-response, as: equal } ]

  # Once the tunnel between client and server is established, subsequent
  # requests will reach the server (via the tunnel).
  - client-request:
      method: GET
      version: "1.1"
      url: /get/something
      headers:
        fields:
          - [ uuid, allowed-tunneled-request ]
          - [ Host, www.example.com ]

    server-response:
      status: 200
      reason: OK
      headers:
        fields:
          - [ X-Response, allowed-tunneled-response ]

    proxy-response:
      status: 200
      headers:
        field:
          - [ X-Response, { value: allowed-tunneled-response, as: equal } ]
