#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#
# This replay file executes traffic that verifies the correct handling of
# incoming PROXY header.
#
meta:
  version: "1.0"

sessions:
  # Test 1: Incoming PROXY Protocol v1 on TCP port
  - protocol:
      - name: http
        version: 1
      - name: proxy-protocol
        version: 1
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 1]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header
              - [
                  Forwarded,
                  { value: for=127.0.0.1;by=127.0.0.1;proto=http, as: equal },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200

  # Test 2: Incoming PROXY Protocol v1 on SSL port
  - protocol:
      - name: http
        version: 1
      - name: tls
      - name: proxy-protocol
        version: 1
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 2]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header, with the correct https
              # protocol
              - [
                  Forwarded,
                  { value: for=127.0.0.1;by=127.0.0.1;proto=https, as: equal },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200

  # Test 3: Incoming PROXY Protocol v2 on TCP port
  - protocol:
      - name: http
        version: 1
      - name: proxy-protocol
        version: 2
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 3]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header
              - [
                  Forwarded,
                  { value: for=127.0.0.1;by=127.0.0.1;proto=http, as: equal },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200

  # Test 4: Incoming PROXY Protocol v2 on SSL port
  - protocol:
      - name: http
        version: 1
      - name: tls
      - name: proxy-protocol
        version: 2
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 4]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header, with the correct https
              # protocol
              - [
                  Forwarded,
                  { value: for=127.0.0.1;by=127.0.0.1;proto=https, as: equal },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200
  # Test 3: Incoming PROXY Protocol v1 on TCP port, with arbitrary source and
  # destination address in PROXY message
  - protocol:
      - name: http
        version: 1
      - name: proxy-protocol
        version: 1
        src-addr: 198.51.100.1:51137
        dst-addr: 198.51.100.2:80
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 5]
              - [Host, 127.0.0.1:80]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header, with the correct for
              # address
              - [
                  Forwarded,
                  {
                    value: for=198.51.100.1;by=127.0.0.1;proto=http,
                    as: equal,
                  },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200

  # Test 4: Verify ATS with :pp: server_ports designation can handle a
  # connection without Proxy Protocol.
  - protocol:
      - name: http
        version: 1
      # not sending Proxy Protcol
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 6]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header
              - [
                  Forwarded,
                  { value: for=127.0.0.1;by=127.0.0.1;proto=http, as: equal },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200

  # Test 5: Verify ATS with :pp: server_ports designation can handle a TLS
  # connection without Proxy Protocol.
  - protocol:
      - name: http
        version: 1
      - name: tls
      # not sending Proxy Protcol
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          method: GET
          version: "1.1"
          url: /get
          headers:
            fields:
              - [uuid, 7]

        proxy-request:
          headers:
            fields:
              # Verify ATS inserted the Forwarded header
              - [
                  Forwarded,
                  { value: for=127.0.0.1;by=127.0.0.1;proto=https, as: equal },
                ]

        server-response:
          status: 200

        proxy-response:
          status: 200
