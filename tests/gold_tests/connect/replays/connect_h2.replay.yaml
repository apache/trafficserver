#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#
# This replay file executes a HTTP/2 CONNECT request, whose DATA frame contains
# a tunnelled HTTP/1 GET request.
#
meta:
  version: "1.0"

sessions:
  - protocol:
      - name: http
        version: 2
      - name: tls
        sni: www.example.com
      - name: tcp
      - name: ip

    transactions:
      - client-request:
          frames:
            - HEADERS:
                headers:
                  fields:
                    - [:method, CONNECT]
                    - [:authority, www.example.com:80]
                    - [uuid, 1]
                    - [test, connect-request]
            - DATA:
                content:
                  encoding: plain
                  data: "GET /get HTTP/1.1\r\nuuid: 1\r\ntest: real-request\r\n\r\n"
        # This is the server response for the tunnelled HTTP/1 request rather
        # than for the CONNECT request.
        server-response:
          status: 200
          reason: OK
          content:
            encoding: plain
            data: response_to_tunnelled_request
            size: 29
        # Verify the client receives the response for the tunneled GET request
        # from the origin server.
        proxy-response:
          status: 200
          content:
            verify: { value: "response_to_tunnelled_request", as: contains }
