#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#
# This replay file assumes that caching is enabled and
# proxy.config.http.cache.ignore_authentication is set to 0(current default)
#
meta:
  version: "1.0"

sessions:
  - transactions:
      # Verify the response containing WWW-Authenticate is not cached
      - client-request:
          method: "GET"
          version: "1.1"
          url: /cc/auth
          headers:
            fields:
              - [uuid, cc-www-auth-response]
              - [Host, example.com]

        server-response:
          status: 401
          reason: Unauthorized
          headers:
            fields:
              - [Content-Length, 4]
              - [Cache-Control, "max-age=5"]
              - [WWW-Authenticate, "Basic"]

        proxy-response:
          status: 401

      # Re-request to make sure the previous response was not cached
      - client-request:
          # Add a delay so ATS has time to finish any caching IO for the
          # previous transaction.
          delay: 100ms
          method: "GET"
          version: "1.1"
          url: /cc/auth
          headers:
            fields:
              - [uuid, cc-www-auth-response-verify]
              - [Host, example.com]
              - [Authorization, "Basic ZGVtbzphdHNAc3Ryb25ncHc="]

        server-response:
          status: 200
          reason: OK

        # Verify that the new 200 response is returned instead of the 401
        proxy-response:
          status: 200
