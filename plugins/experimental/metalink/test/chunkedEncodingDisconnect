#!/usr/bin/env python

print '''1..1 chunkedEncodingDisconnect
# The proxy closes the client connection and doesn't send a final chunk if the
# server disconnects without sending one'''

from twisted.internet import error, protocol, reactor, tcp
from twisted.web import http

def callback():
  print 'not ok 1 - The client was left hanging'

  reactor.stop()

reactor.callLater(2, callback)

class factory(http.HTTPFactory):
  class protocol(http.HTTPChannel):
    class requestFactory(http.Request):
      def requestReceived(ctx, method, target, version):

        ctx.client = None
        ctx.clientproto = version

        ctx.write('chunkedEncodingDisconnect')

        # If the server disconnects before the proxy sends the response
        # headers, the proxy may send a Content-Length header vs. a chunked
        # response
        reactor.callLater(1, ctx.transport.loseConnection)

server = tcp.Port(0, factory())
server.startListening()

print '# Listening on {0}:{1}'.format(*server.socket.getsockname())

class factory(protocol.ClientFactory):
  def clientConnectionFailed(ctx, connector, reason):

    print 'Bail out!'
    reason.printTraceback()

    reactor.stop()

  class protocol(http.HTTPClient):
    def connectionLost(ctx, reason):
      try:
        reactor.stop()

      except error.ReactorNotRunning:
        pass

      else:
        print 'ok 1 - The client connection closed'

    connectionMade = lambda ctx: ctx.transport.write('GET {0}:{1} HTTP/1.1\r\n\r\n'.format(*server.socket.getsockname()))

    def handleHeader(ctx, k, v):
      if k.lower() == 'content-length':
        print 'not ok 1 - Got a Content-Length header vs. a chunked response'

        # Who cares what happens now?
        reactor.stop()

    # Avoid calling undefined handleResponse() at the end of the content (if
    # the proxy sent a Content-Length header vs. a chunked response).
    # (Override connectionLost() when the proxy closes the client connection or
    # stop the reactor.)
    def handleResponseEnd(ctx):
      pass

    def handleResponsePart(ctx, data):
      if data.endswith('0\r\n\r\n'):
        print 'not ok 1 - Got a final chunk'

        # Who cares what happens now?
        reactor.stop()

tcp.Connector('localhost', 8080, factory(), 30, None, reactor).connect()

reactor.run()
