#!/usr/bin/env python

print '''1..2 notModified
# The proxy doesn't crash on a 304 Not Modified response'''

from twisted.internet import error, protocol, reactor, tcp
from twisted.web import http

def callback():
  print 'ok 2 - The proxy didn\'t crash (the client connection didn\'t close yet)'

  reactor.stop()

reactor.callLater(1, callback)

class factory(http.HTTPFactory):
  class protocol(http.HTTPChannel):
    class requestFactory(http.Request):
      def requestReceived(ctx, method, target, version):

        ctx.client = None
        ctx.clientproto = version

        ctx.setResponseCode(304)
        ctx.finish()

server = tcp.Port(0, factory())
server.startListening()

print '# Listening on {0}:{1}'.format(*server.socket.getsockname())

class factory(protocol.ClientFactory):
  def clientConnectionFailed(ctx, connector, reason):

    print 'Bail out!'
    reason.printTraceback()

    reactor.stop()

  class protocol(http.HTTPClient):
    def connectionLost(ctx, reason):
      try:
        reactor.stop()

      except error.ReactorNotRunning:
        pass

      else:
        print 'not ok 1 - Did the proxy crash?  (The client connection closed.)'

    connectionMade = lambda ctx: ctx.transport.write('GET {0}:{1} HTTP/1.1\r\n\r\n'.format(*server.socket.getsockname()))

    def handleStatus(ctx, version, status, message):
      if status != '304':
        print 'not',

      print 'ok 1 - 304 Not Modified response status'

tcp.Connector('localhost', 8080, factory(), 30, None, reactor).connect()

reactor.run()
