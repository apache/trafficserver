#!/usr/bin/env python3
#
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
"""U4WRH script - Process header_rewrite (HRW) lines and reconstruct hrw4u source."""

from __future__ import annotations

from hrw4u.script_common import create_base_parser, create_parse_tree, generate_output, process_input
from u4wrh.hrw_visitor import HRWInverseVisitor
from u4wrh.u4wrhLexer import u4wrhLexer
from u4wrh.u4wrhParser import u4wrhParser


def main() -> None:
    """Main entry point for the u4wrh script."""
    parser, output_group = create_base_parser("Process header_rewrite (HRW) lines and reconstruct hrw4u source.")

    # Add U4WRH-specific output option
    output_group.add_argument("--hrw4u", action="store_true", help="Produce reconstructed hrw4u output (default)")

    args = parser.parse_args()

    # Default to hrw4u output if neither AST nor hrw4u specified
    if not (args.ast or args.hrw4u):
        args.hrw4u = True

    # Process input and create parse tree
    content, filename = process_input(args.input_file)
    tree, parser_obj = create_parse_tree(content, filename, u4wrhLexer, u4wrhParser, "u4wrh")

    # Generate output
    generate_output(tree, parser_obj, HRWInverseVisitor, filename, args.debug, args.ast)


if __name__ == "__main__":
    main()
