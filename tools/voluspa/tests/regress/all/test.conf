schema_version: 1
owner: ""
reference: your reference notes here
rcpt: All
ssl_cert_names:
  - /secrets/mysecret.txt

rules:
  default:
    add_header: "X-Client-Protocol %<proto>"
    add_header_origin: X-TestOriginHeader "1"
    set_header: "X-Client-Protocol %<proto>"
    set_header_origin: X-TestOriginHeader "1"
    remove_header: "Proxy"
    remove_header_origin: "Proxy"
    allow_ip: [10.153.0.0-10.153.255.255, 10.179.0.0-10.179.255.255]
    allow_ip_parent: [10.253.0.0-10.253.255.255, 10.254.0.0-10.254.255.255]
    strip_query: true
    force_ttl: 0s
    proxy_cache_control: "MyProxyHeader"
    origin_host_header: origin
    disable_cache: true
    deny_methods: [ POST, PUT, DELETE ]
    allow_methods: [ PURGE ]
    regex_remap: "^/([^/]+)/(.*) https://$1.s3.amazonaws.com/$2"
    s3:
      path: certs/s3.config
      virtual_host: true
      version: 4
      v4_include_headers: ["header1", "header2"]
      v4_exclude_headers: ["header3", "header4"]
      region_map: region_map_test.config
    video_background_fetch:
      fetch_count: 10
      fetch_max: 1000
      api_header: header1
      replace_host: host1
      name_space: ns1
      metrics_prefix: prefix1
      exact_match: true
      log_name: log1
      frontend:
        fetch_path_pattern:
          - '/(.*-)(\d+)(.*)/$1{$2+2}$3/'
          - /(.*)(\d{3})(_.*\.jpg.*)/$1{$2+1:3}$3/
        fetch_policy: lru:123
      backend:
        fetch_policy: simple

    cache_promote:
      policy: lru
      lru_hits: 5
      lru_buckets: 100000

    cachekey:
      include_params: ["param1", "param2"]
      exclude_params: ["param1", "param2"]
      include_headers:  ["header1", "header2"]
      include_cookies:  ["cookie1", "cookie2"]
      sort_query: true
      remove_all_params: true
      static_prefix: "SomeString"
      regex_replace_path: '/.*/probe-info-ok.html/'
      regex_replace_path_uri: '/http[s]?:\/\/[^\/]*(.*\.html|.*).*/$1/'
      capture_header: [ 'Authorization:/AWS\s([^:]+).*/clientID:$1/', 'Authorization:/BYT\s([^,]+).*/clientID:$1/' ]
    failover:
      domain: assets-origin.subdomain.example.com
      status_codes: [401, 403, 404, 407, 410, 500, 501, 502, 503, 504, 505]
      host_header: origin
    priority: background
    default_ttl: 60m
    content_type_forge:
        '.*\.json$': application/json
        '.*\.css$': text/css
        '.*\.crl$': application/pkix-crl
    conf_remap: "CONFIG proxy.config.http.connect_attempts_timeout INT 600\n
       CONFIG proxy.config.http.transaction_no_activity_timeout_in INT 600\n
       CONFIG proxy.config.http.transaction_no_activity_timeout_out INT 600"
    header_rewrite: "cond %{SEND_REQUEST_HDR_HOOK}\n
    add-header Authorization \"Basic 123412341234\" [L]"
    log_cookie:
       Logger-cookie-Name1: NameOfCookie1
       Logger-cookie-Name2: NameOfCookie2
    log_header:
        Logger-header-Name1: NameOfHeader1
        Logger-header-Name2: NameOfHeader2
    negative_ttl: 60m
    transaction_timeout: 10m
    edge_compression:
        enabled: true
        flush: true
        remove_accept_encoding: true
        minimum_content_length: 532
        algorithms: [gzip, br]
        static_origin_compressible_content_type:
            - "text/*"
            - "*javascript*"
    access_approval:
       raw: |-
          @pparam=--symmetric-keys-map=hmac_keys.txt
          @pparam=--check-cookie=TokenCookie
          @pparam=--extract-subject-to-header=@TokenSubject
          @pparam=--extract-tokenid-to-header=@TokenId
          @pparam=--extract-status-to-header=@TokenStatus
          @pparam=--token-response-header=TokenRespHdr
    cache_version: 3

  no_receipts:
    receipts:
      enabled: false

  override_receipt:
    receipts:
      name: override

  # Redirect takes one redirect url and status code.
  # If status code is empty, it takes default value of 302.
  redirect_this:
    redirect:
      url: https://example.com/filenotfound

  preserve_host_header:
    origin_host_header: alias
    receipts:
      enabled: false
    priority: foreground
    s3:
      path: /opt/ats/etc/trafficserver/certs/s3.config
      virtual_host: false

  escalate_pristine:
    failover:
      domain: assets-origin.subdomain.example.com
      status_codes: [401, 403, 404, 407, 410, 500, 501, 502, 503, 504, 505]
      host_header: origin

  streamingaudio:
    priority: streamingaudio

  streamingvideo:
    priority: streamingvideo

  roles_within_roles:
    video_background_fetch:
      frontend:
        fetch_policy: lru:123
      backend:
        fetch_policy: simple

  cache_promote:
    cache_promote:
      policy: lru
      lru_hits: 5
      lru_buckets: 100000

  rlog_type:
    log_type: private

  storage_volume_ram:
    storage_volume: ramdisk_volume

  storage_volume_disk:
    storage_volume: disk_volume

  raw_lua:
    lua: |-
      function do_remap()
        local to_host = ts.remap.get_to_url_host()
        ts.debug(to_host)
        return 0
      end

  echo_cors_test:
    echo_cors: "Origin"

  s3_v4:
    s3:
      path: certs/s3.config
      virtual_host: true
      version: 4
      region_map: region_map_test.config


  s3_v2:
    s3:
      path: certs/s3.config
      virtual_host: true
      version: 2
      region_map: region_map_test.config


explicit:
  - origin: https://origin2.example.com
    alias:
        - https://myalias1.example.com
        - https://myalias2.example.com
    rule: no_receipts
  - origin: http://origin3.example.com
    alias:
      - http://(.*).example.com
    regex_map: true
  - origin: origin4.example.com
    alias:
        - myalias4.example.com
    schemes: [http, https]
  - origin: origin4.example.com
    alias:
        - myalias5.example.com
    rule: override_receipt
  - origin: origin6.example.com
    alias:
        - myalias6.example.com
    role: roles_edge_child
    rule: roles_within_roles
  - origin: origin8.example.com
    alias:
        - myalias8.example.com
    rule: rlog_type
  - origin: origin9.example.com
    alias:
        - myalias9.example.com
    rule: s3_v4
  - origin: origina.example.com
    alias:
        - myaliasa.example.com
    rule: s3_v2

mappings:
  - origin: origin7.example.com
    alias:
        - myalias7.example.com
        - myalias7.example.com/ran
        - myalias7.example.com/bob
        - /path/test.txt
    rule: no_receipts
  - origin: origin7.example.com
    alias:
        - redirect.example.com
    rule: redirect_this
