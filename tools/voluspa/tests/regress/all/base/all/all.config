# Code generated by Voluspa. DO NOT EDIT.

map http://myalias7.example.com/bob \
    http://origin7.example.com

map http://myalias7.example.com/ran \
    http://origin7.example.com

map http://myalias7.example.com \
    http://origin7.example.com

map /path/test.txt \
    http://origin7.example.com

map http://redirect.example.com \
    http://origin7.example.com \
    @plugin=regex_remap.so @pparam=all/redirect9.config

map https://myalias1.example.com \
    https://origin2.example.com

map https://myalias2.example.com \
    https://origin2.example.com

regex_map http://(.*).example.com \
    http://origin3.example.com \
    @plugin=access_control.so @pparam=--symmetric-keys-map=hmac_keys.txt \
      @pparam=--check-cookie=TokenCookie \
      @pparam=--extract-subject-to-header=@TokenSubject \
      @pparam=--extract-tokenid-to-header=@TokenId \
      @pparam=--extract-status-to-header=@TokenStatus \
      @pparam=--token-response-header=TokenRespHdr \
{% if salt.pillar.get("roles_trafficserver_cache_promote") %}    @plugin=cache_promote.so @pparam=--policy=lru @pparam=--hits=5 @pparam=--buckets=100000 \{% else %}    \{% endif %}
    @plugin=cachekey.so @pparam=--include-params=param1,param2 \
      @pparam=--include-cookies=cookie1,cookie2 \
      @pparam=--include-headers=header1,header2 \
      @pparam=--exclude-params=param1,param2 \
      @pparam=--static-prefix=SomeString \
      @pparam=--sort-params=true \
      @pparam=--remove-all-params=true \
      @pparam=--capture-path=/.*/probe-info-ok.html/ \
      @pparam=--capture-path-uri=/http[s]?:\/\/[^\/]*(.*\.html|.*).*/$1/ \
      @pparam=--capture-header=Authorization:/AWS\s([^:]+).*/clientID:$1/ \
      @pparam=--capture-header=Authorization:/BYT\s([^,]+).*/clientID:$1/ \
    @plugin=gzip.so @pparam=all/gzip2.config \
    @plugin=escalate.so @pparam=--pristine \
      @pparam=401,403,404,407,410,500,501,502,503,504,505:assets-origin.subdomain.example.com \
    @plugin=regex_remap.so @pparam=all/strip_query2.config \
    @plugin=volcano.so @pparam=--fetch-count=10 @pparam=--fetch-max=1000 @pparam=--api-header=header1 @pparam=--replace-host=host1 @pparam=--name-space=ns1 @pparam=--metrics-prefix=prefix1 @pparam=--exact-match=true @pparam=--log-name=log1 {% if salt.pillar.get("roles_video_fetch_backend") %}     @pparam=--fetch-policy=simple @pparam=--front=false  \{% else %}    \{% endif %} {% if salt.pillar.get("roles_video_fetch_frontend") %}     @pparam=--fetch-policy=lru:123 @pparam=--fetch-path-pattern=/(.*-)(\d+)(.*)/$1{$2+2}$3/ @pparam=--fetch-path-pattern=/(.*)(\d{3})(_.*\.jpg.*)/$1{$2+1:3}$3/ @pparam=--front=true \{% else %}    \{% endif %}
    @plugin=regex_remap.so @pparam=all/regex2.config \
    @plugin=s3_auth.so @pparam=--config @pparam=certs/s3.config \
      @pparam=--virtual_host \
      @pparam=--version=4 \
      @pparam=--v4-include-headers=header1,header2 \
      @pparam=--v4-exclude-headers=header3,header4 \
      @pparam=--v4-region-map=region_map_test.config \
    @plugin=conf_remap.so @pparam=proxy.config.http.cache.generation=3 \
      @pparam=proxy.config.http.connect_attempts_timeout=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_in=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_out=600 \
      @pparam=proxy.config.http.cache.http=0 \
      @pparam=proxy.config.http.negative_caching_lifetime=3600 \
      @pparam=proxy.config.url_remap.pristine_host_hdr=0 \
      @pparam=proxy.config.http.connect_attempts_timeout=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_in=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_out=600 \
    @plugin=header_rewrite.so @pparam=all/hdrs2.config \
    @src_ip=10.153.0.0-10.153.255.255 @src_ip=10.179.0.0-10.179.255.255 @action=allow \
    @action=allow @method=PURGE \
    @action=deny @method=POST @method=PUT @method=DELETE

map http://myalias4.example.com \
    http://origin4.example.com \
    @plugin=access_control.so @pparam=--symmetric-keys-map=hmac_keys.txt \
      @pparam=--check-cookie=TokenCookie \
      @pparam=--extract-subject-to-header=@TokenSubject \
      @pparam=--extract-tokenid-to-header=@TokenId \
      @pparam=--extract-status-to-header=@TokenStatus \
      @pparam=--token-response-header=TokenRespHdr \
{% if salt.pillar.get("roles_trafficserver_cache_promote") %}    @plugin=cache_promote.so @pparam=--policy=lru @pparam=--hits=5 @pparam=--buckets=100000 \{% else %}    \{% endif %}
    @plugin=cachekey.so @pparam=--include-params=param1,param2 \
      @pparam=--include-cookies=cookie1,cookie2 \
      @pparam=--include-headers=header1,header2 \
      @pparam=--exclude-params=param1,param2 \
      @pparam=--static-prefix=SomeString \
      @pparam=--sort-params=true \
      @pparam=--remove-all-params=true \
      @pparam=--capture-path=/.*/probe-info-ok.html/ \
      @pparam=--capture-path-uri=/http[s]?:\/\/[^\/]*(.*\.html|.*).*/$1/ \
      @pparam=--capture-header=Authorization:/AWS\s([^:]+).*/clientID:$1/ \
      @pparam=--capture-header=Authorization:/BYT\s([^,]+).*/clientID:$1/ \
    @plugin=gzip.so @pparam=all/gzip2.config \
    @plugin=escalate.so @pparam=--pristine \
      @pparam=401,403,404,407,410,500,501,502,503,504,505:assets-origin.subdomain.example.com \
    @plugin=regex_remap.so @pparam=all/strip_query2.config \
    @plugin=volcano.so @pparam=--fetch-count=10 @pparam=--fetch-max=1000 @pparam=--api-header=header1 @pparam=--replace-host=host1 @pparam=--name-space=ns1 @pparam=--metrics-prefix=prefix1 @pparam=--exact-match=true @pparam=--log-name=log1 {% if salt.pillar.get("roles_video_fetch_backend") %}     @pparam=--fetch-policy=simple @pparam=--front=false  \{% else %}    \{% endif %} {% if salt.pillar.get("roles_video_fetch_frontend") %}     @pparam=--fetch-policy=lru:123 @pparam=--fetch-path-pattern=/(.*-)(\d+)(.*)/$1{$2+2}$3/ @pparam=--fetch-path-pattern=/(.*)(\d{3})(_.*\.jpg.*)/$1{$2+1:3}$3/ @pparam=--front=true \{% else %}    \{% endif %}
    @plugin=regex_remap.so @pparam=all/regex2.config \
    @plugin=s3_auth.so @pparam=--config @pparam=certs/s3.config \
      @pparam=--virtual_host \
      @pparam=--version=4 \
      @pparam=--v4-include-headers=header1,header2 \
      @pparam=--v4-exclude-headers=header3,header4 \
      @pparam=--v4-region-map=region_map_test.config \
    @plugin=conf_remap.so @pparam=proxy.config.http.cache.generation=3 \
      @pparam=proxy.config.http.connect_attempts_timeout=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_in=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_out=600 \
      @pparam=proxy.config.http.cache.http=0 \
      @pparam=proxy.config.http.negative_caching_lifetime=3600 \
      @pparam=proxy.config.url_remap.pristine_host_hdr=0 \
      @pparam=proxy.config.http.connect_attempts_timeout=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_in=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_out=600 \
    @plugin=header_rewrite.so @pparam=all/hdrs2.config \
    @src_ip=10.153.0.0-10.153.255.255 @src_ip=10.179.0.0-10.179.255.255 @action=allow \
    @action=allow @method=PURGE \
    @action=deny @method=POST @method=PUT @method=DELETE

map https://myalias4.example.com \
    https://origin4.example.com \
    @plugin=access_control.so @pparam=--symmetric-keys-map=hmac_keys.txt \
      @pparam=--check-cookie=TokenCookie \
      @pparam=--extract-subject-to-header=@TokenSubject \
      @pparam=--extract-tokenid-to-header=@TokenId \
      @pparam=--extract-status-to-header=@TokenStatus \
      @pparam=--token-response-header=TokenRespHdr \
{% if salt.pillar.get("roles_trafficserver_cache_promote") %}    @plugin=cache_promote.so @pparam=--policy=lru @pparam=--hits=5 @pparam=--buckets=100000 \{% else %}    \{% endif %}
    @plugin=cachekey.so @pparam=--include-params=param1,param2 \
      @pparam=--include-cookies=cookie1,cookie2 \
      @pparam=--include-headers=header1,header2 \
      @pparam=--exclude-params=param1,param2 \
      @pparam=--static-prefix=SomeString \
      @pparam=--sort-params=true \
      @pparam=--remove-all-params=true \
      @pparam=--capture-path=/.*/probe-info-ok.html/ \
      @pparam=--capture-path-uri=/http[s]?:\/\/[^\/]*(.*\.html|.*).*/$1/ \
      @pparam=--capture-header=Authorization:/AWS\s([^:]+).*/clientID:$1/ \
      @pparam=--capture-header=Authorization:/BYT\s([^,]+).*/clientID:$1/ \
    @plugin=gzip.so @pparam=all/gzip2.config \
    @plugin=escalate.so @pparam=--pristine \
      @pparam=401,403,404,407,410,500,501,502,503,504,505:assets-origin.subdomain.example.com \
    @plugin=regex_remap.so @pparam=all/strip_query2.config \
    @plugin=volcano.so @pparam=--fetch-count=10 @pparam=--fetch-max=1000 @pparam=--api-header=header1 @pparam=--replace-host=host1 @pparam=--name-space=ns1 @pparam=--metrics-prefix=prefix1 @pparam=--exact-match=true @pparam=--log-name=log1 {% if salt.pillar.get("roles_video_fetch_backend") %}     @pparam=--fetch-policy=simple @pparam=--front=false  \{% else %}    \{% endif %} {% if salt.pillar.get("roles_video_fetch_frontend") %}     @pparam=--fetch-policy=lru:123 @pparam=--fetch-path-pattern=/(.*-)(\d+)(.*)/$1{$2+2}$3/ @pparam=--fetch-path-pattern=/(.*)(\d{3})(_.*\.jpg.*)/$1{$2+1:3}$3/ @pparam=--front=true \{% else %}    \{% endif %}
    @plugin=regex_remap.so @pparam=all/regex2.config \
    @plugin=s3_auth.so @pparam=--config @pparam=certs/s3.config \
      @pparam=--virtual_host \
      @pparam=--version=4 \
      @pparam=--v4-include-headers=header1,header2 \
      @pparam=--v4-exclude-headers=header3,header4 \
      @pparam=--v4-region-map=region_map_test.config \
    @plugin=conf_remap.so @pparam=proxy.config.http.cache.generation=3 \
      @pparam=proxy.config.http.connect_attempts_timeout=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_in=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_out=600 \
      @pparam=proxy.config.http.cache.http=0 \
      @pparam=proxy.config.http.negative_caching_lifetime=3600 \
      @pparam=proxy.config.url_remap.pristine_host_hdr=0 \
      @pparam=proxy.config.http.connect_attempts_timeout=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_in=600 \
      @pparam=proxy.config.http.transaction_no_activity_timeout_out=600 \
    @plugin=header_rewrite.so @pparam=all/hdrs2.config \
    @src_ip=10.153.0.0-10.153.255.255 @src_ip=10.179.0.0-10.179.255.255 @action=allow \
    @action=allow @method=PURGE \
    @action=deny @method=POST @method=PUT @method=DELETE

map http://myalias5.example.com \
    http://origin4.example.com \
    @plugin=header_rewrite.so @pparam=all/hdrs6.config

{% if salt.pillar.get("roles_edge_child") %}

map http://myalias6.example.com \
    http://origin6.example.com \
    @plugin=volcano.so {% if salt.pillar.get("roles_video_fetch_backend") %}     @pparam=--fetch-policy=simple @pparam=--front=false  \{% else %}    \{% endif %} {% if salt.pillar.get("roles_video_fetch_frontend") %}     @pparam=--fetch-policy=lru:123 @pparam=--front=true \{% else %}    \{% endif %}

{% endif %}

map http://myalias8.example.com \
    http://origin8.example.com \
    @plugin=header_rewrite.so @pparam=all/hdrs10.config

map http://myalias9.example.com \
    http://origin9.example.com \
    @plugin=s3_auth.so @pparam=--config @pparam=certs/s3.config \
      @pparam=--virtual_host \
      @pparam=--version=4 \
      @pparam=--v4-region-map=region_map_test.config \
      @pparam=--v4-exclude-headers=x-forwarded-for,forwarded,via,authorization

map http://myaliasa.example.com \
    http://origina.example.com \
    @plugin=s3_auth.so @pparam=--config @pparam=certs/s3.config \
      @pparam=--virtual_host \
      @pparam=--version=2 \
      @pparam=--v4-region-map=region_map_test.config

